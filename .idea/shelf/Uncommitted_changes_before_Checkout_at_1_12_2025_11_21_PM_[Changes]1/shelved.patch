Index: src/components/navbar/NavbarBase.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// BaseNavbar.jsx\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\", // Set primary color to black\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst BaseNavbar = ({ title, links, onLogout }) => {\r\n  return (\r\n    <div data-testid=\"navbar-1\">\r\n      <ThemeProvider theme={theme}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography\r\n              variant=\"h5\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, fontWeight: \"bold\" }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <div>\r\n              {links.map(({ label, href, onClick }, index) => (\r\n                <Button\r\n                  key={index}\r\n                  component={Link}\r\n                  to={href}\r\n                  color=\"inherit\"\r\n                  onClick={onClick}\r\n                >\r\n                  {label}\r\n                </Button>\r\n              ))}\r\n              {onLogout && (\r\n                <Button color=\"inherit\" onClick={onLogout}>\r\n                  Log Out\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseNavbar;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navbar/NavbarBase.jsx b/src/components/navbar/NavbarBase.jsx
--- a/src/components/navbar/NavbarBase.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/components/navbar/NavbarBase.jsx	(date 1736720357391)
@@ -1,4 +1,3 @@
-// BaseNavbar.jsx
 import React from "react";
 import { Link } from "react-router-dom";
 import AppBar from "@mui/material/AppBar";
@@ -19,7 +18,7 @@
   },
 });
 
-const BaseNavbar = ({ title, links, onLogout }) => {
+const NavbarBase = ({ title, links, onLogout }) => {
   return (
     <div data-testid="navbar-1">
       <ThemeProvider theme={theme}>
@@ -57,4 +56,4 @@
   );
 };
 
-export default BaseNavbar;
+export default NavbarBase;
Index: src/components/navbar/navbar.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.navbar {\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.navContainer {\r\n  width: 100%;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: black;\r\n}\r\n\r\n.logo {\r\n  font-weight: 1000;\r\n  font-size: x-large;\r\n  color: white;\r\n  font-family: \"Dubai Medium\", serif;\r\n}\r\n\r\n.navButton {\r\n  margin-left: 20px;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  color: #003580;\r\n}\r\n/* Navbar.css */\r\n\r\n.navbar-divider {\r\n  border-bottom: 1px solid #ffffff; /* Adjust the thickness and color as needed */\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navbar/navbar.css b/src/components/navbar/navbar.css
--- a/src/components/navbar/navbar.css	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/components/navbar/navbar.css	(date 1736720027784)
@@ -29,7 +29,7 @@
   cursor: pointer;
   color: #003580;
 }
-/* Navbar.css */
+/* NavbarUser.css */
 
 .navbar-divider {
   border-bottom: 1px solid #ffffff; /* Adjust the thickness and color as needed */
Index: src/pages/edit/edit.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Typography,\r\n  Box,\r\n  Alert,\r\n  Snackbar,\r\n} from \"@mui/material\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport OfficeStore from \"../../api/OfficeStore\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\", // Set primary color to black\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst EditOfficeSpaceForm = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    location: \"\",\r\n    size: \"\",\r\n    price: 0,\r\n    photos: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const fetchOffice = OfficeStore((state) => state.fetchOffice);\r\n  const updateOffice = OfficeStore((state) => state.updateOffice);\r\n  const deleteOffice = OfficeStore((state) => state.deleteOffice);\r\n\r\n  const [editConfirmationOpen, setEditConfirmationOpen] = useState(false); // State for Snackbar\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false); // State for Snackbar\r\n\r\n  useEffect(() => {\r\n    const fetchOfficeData = async () => {\r\n      try {\r\n        const data = await fetchOffice(id);\r\n        console.log(\"Ad Space data:\", data);\r\n        setFormData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching office data:\", error);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchOfficeData();\r\n    }\r\n  }, [id, fetchOffice]);\r\n\r\n  const validateField = (field, value) => {\r\n    let error = \"\";\r\n    console.log(`Validating ${field} with value ${value}`);\r\n    switch (field) {\r\n      case \"location\":\r\n        if (value === \"\" || value.trim().length <= 2) {\r\n          error = \"Location is not valid.\";\r\n          console.log(\"Error in location field\");\r\n        }\r\n        break;\r\n      case \"photos\":\r\n        if (\r\n          value === \"\" ||\r\n          (value.trim() && !/^(https?:\\/\\/[^\\s$.?#].[^\\s]*)$/i.test(value))\r\n        ) {\r\n          error = \"Invalid URL format.\";\r\n          console.log(\"Error in photos field\");\r\n        }\r\n        break;\r\n      case \"size\":\r\n        if (value === 0 || isNaN(value) || Number(value) <= 0) {\r\n          error = \"Size must be a positive number.\";\r\n          console.log(\"Error in size field\");\r\n        }\r\n        break;\r\n      case \"price\":\r\n        if (value === 0 || isNaN(value) || Number(value) <= 0) {\r\n          error = \"Price must be a positive number.\";\r\n          console.log(\"Error in price field\");\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n\r\n    const error = validateField(field, value);\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [field]: error || \"\", // Clear the error if the field is valid\r\n    }));\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    Object.keys(formData).forEach((field) => {\r\n      const error = validateField(field, formData[field]);\r\n      if (error) {\r\n        newErrors[field] = error;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (!isValid) {\r\n      console.log(\"Form validation failed.\");\r\n      console.log(\"Form validation errors\", newErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await updateOffice(formData);\r\n      console.log(\"Office space updated:\", data);\r\n      setEditConfirmationOpen(true);\r\n    } catch (error) {\r\n      console.error(\"Error updating office space:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditConfirmationClose = () => {\r\n    setEditConfirmationOpen(false);\r\n    navigate(\"/myspaces\"); // Navigate to the spaces page after confirmation\r\n  };\r\n\r\n  const handleDeleteConfirmationClose = () => {\r\n    setDeleteConfirmationOpen(false);\r\n    navigate(\"/myspaces\"); // Navigate to the spaces page after confirmation\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    navigate(\"/myspaces\");\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    try {\r\n      await deleteOffice(id);\r\n      console.log(\"Office space deleted\");\r\n      setDeleteConfirmationOpen(true);\r\n    } catch (error) {\r\n      console.error(\"Error deleting office space:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"editPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <div className=\"ad_space_form\">\r\n          <Typography\r\n            variant=\"h5\"\r\n            gutterBottom\r\n            sx={{\r\n              fontSize: \"30px\",\r\n              marginLeft: \"25px\",\r\n              marginTop: \"30px\",\r\n              marginBottom: \"30px\",\r\n            }}\r\n          >\r\n            Edit and View the Advertisement Space Listing\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              padding: { xs: \"24px\", md: \"32px\" },\r\n              margin: { xs: \"16px\", md: \"32px\" },\r\n              boxShadow: \"0px 0px 16px rgba(0, 0, 0, 0.1)\",\r\n              borderRadius: \"9px\",\r\n              backgroundColor: \"#fff\",\r\n            }}\r\n          >\r\n            <form onSubmit={submitHandler}>\r\n              <TextField\r\n                label=\"Location\"\r\n                placeholder=\"Location\"\r\n                value={formData.location}\r\n                onChange={(e) => handleInputChange(\"location\", e.target.value)}\r\n                fullWidth\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n                margin=\"normal\"\r\n                error={!!errors.location}\r\n                helperText={errors.location}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Image URL\"\r\n                placeholder=\"Image URL\"\r\n                value={formData.photos}\r\n                onChange={(e) => handleInputChange(\"photos\", e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!!errors.photos}\r\n                helperText={errors.photos}\r\n              />\r\n\r\n              {formData.photos && (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\", // Flexbox for centering\r\n                    justifyContent: \"center\", // Center horizontally\r\n                    alignItems: \"center\", // Center vertically\r\n                    margin: \"20px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={formData.photos}\r\n                    alt=\"Office Space\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      height: \"50%\",\r\n                      objectFit: \"contain\",\r\n                      borderRadius: \"13px\", // Apply rounded corners\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <TextField\r\n                label=\"Size\"\r\n                placeholder=\"Size\"\r\n                value={formData.size}\r\n                type=\"number\"\r\n                onChange={(e) => handleInputChange(\"size\", e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!!errors.size}\r\n                helperText={errors.size}\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Price\"\r\n                placeholder=\"Price\"\r\n                value={formData.price}\r\n                type=\"number\"\r\n                onChange={(e) => handleInputChange(\"price\", e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!!errors.price}\r\n                helperText={errors.price}\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                marginTop={3}\r\n                sx={{ paddingLeft: \"1.25%\", paddingRight: \"1.25%\" }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"error\"\r\n                  onClick={cancelHandler}\r\n                  style={{ borderRadius: \"7px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"error\"\r\n                  onClick={deleteHandler}\r\n                  style={{ borderRadius: \"7px\" }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ color: \"#fff\", backgroundColor: \"#000\" }}\r\n                  style={{ borderRadius: \"7px\" }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Stack>\r\n            </form>\r\n          </Box>\r\n        </div>\r\n        <Snackbar\r\n          open={editConfirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handleEditConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleEditConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\", border: \"2px solid green\" }}\r\n          >\r\n            Your ad space has been updated successfully!\r\n          </Alert>\r\n        </Snackbar>{\" \"}\r\n        <Snackbar\r\n          open={deleteConfirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handleDeleteConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleDeleteConfirmationClose}\r\n            severity=\"info\"\r\n            sx={{ width: \"100%\", border: \"2px solid cyan\" }}\r\n          >\r\n            Your ad space has been deleted successfully!\r\n          </Alert>\r\n        </Snackbar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditOfficeSpaceForm;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/edit/edit.js b/src/pages/edit/edit.js
--- a/src/pages/edit/edit.js	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/edit/edit.js	(date 1736720027826)
@@ -9,7 +9,7 @@
   Alert,
   Snackbar,
 } from "@mui/material";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import OfficeStore from "../../api/OfficeStore";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
 
@@ -167,7 +167,7 @@
   return (
     <div data-testid="editPage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <div className="ad_space_form">
           <Typography
             variant="h5"
Index: src/pages/login/Login.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        findaspace.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleUsernameChange = (e) => {\r\n    const value = e.target.value;\r\n    setUsername(value);\r\n    setLoginError(\"\");\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n    console.log(password);\r\n    setLoginError(\"\");\r\n  };\r\n\r\n  const fetchData = () => {\r\n    LoginStore.getState()\r\n      .login(username, password)\r\n      .then(() => {\r\n        const userData = LoginStore.getState().userData;\r\n        if (userData) {\r\n          if (userData.username === \"admin\") {\r\n            navigate(\"/admin/platform-health\");\r\n          } else {\r\n            navigate(\"/spaces\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error response content\", error);\r\n        setLoginError(error.message);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"login-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        {/* <div style={{ height: '5px', backgroundColor: 'white' }} />  */}\r\n        <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={4}\r\n            md={7}\r\n            sx={{\r\n              backgroundImage:\r\n                \"url(https://theadfocus.com/wp-content/uploads/2021/12/Times-Square-anthony-rosset-scaled.jpg)\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundColor: (t) =>\r\n                t.palette.mode === \"light\"\r\n                  ? t.palette.grey[50]\r\n                  : t.palette.grey[900],\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n            }}\r\n          />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\", // Center vertically\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                padding: { xs: \"24px\", md: \"32px\" },\r\n                margin: { xs: \"16px\", md: \"32px\" },\r\n                boxShadow: \"0px 0px 16px rgba(0, 0, 0, 0.1)\",\r\n                borderRadius: \"8px\",\r\n                backgroundColor: \"#fff\",\r\n                width: { xs: \"95%\", sm: \"80%\", md: \"60%\" }, // Adjust width for responsiveness\r\n              }}\r\n            >\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n                sx={{\r\n                  fontSize: \"30px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Welcome to Find a Space!\r\n              </Typography>\r\n              <Box\r\n                component=\"form\"\r\n                noValidate\r\n                onSubmit={handleSubmit}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={handleUsernameChange}\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  error={!!loginError}\r\n                  helperText={loginError} // Show error message\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange}\r\n                  autoComplete=\"current-password\"\r\n                  error={!!loginError}\r\n                  helperText={loginError} // Show error message\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  Log In\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link\r\n                      to=\"/signup\"\r\n                      variant=\"body2\"\r\n                      onClick={() => navigate(\"/signup\")}\r\n                    >\r\n                      {\"Create a new account\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n                <Copyright sx={{ mt: 5 }} />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/login/Login.jsx b/src/pages/login/Login.jsx
--- a/src/pages/login/Login.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/login/Login.jsx	(date 1736720027762)
@@ -1,12 +1,10 @@
 import React, { useState } from "react";
 import { useNavigate } from "react-router-dom";
 import LoginStore from "../../api/LoginStore";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import Button from "@mui/material/Button";
 import CssBaseline from "@mui/material/CssBaseline";
 import TextField from "@mui/material/TextField";
-import FormControlLabel from "@mui/material/FormControlLabel";
-import Checkbox from "@mui/material/Checkbox";
 import Link from "@mui/material/Link";
 import Paper from "@mui/material/Paper";
 import Box from "@mui/material/Box";
@@ -93,7 +91,7 @@
   return (
     <div data-testid="login-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         {/* <div style={{ height: '5px', backgroundColor: 'white' }} />  */}
         <Grid container component="main" sx={{ height: "100vh" }}>
           <CssBaseline />
@@ -183,10 +181,6 @@
                   error={!!loginError}
                   helperText={loginError} // Show error message
                 />
-                <FormControlLabel
-                  control={<Checkbox value="remember" color="primary" />}
-                  label="Remember me"
-                />
                 <Button
                   type="submit"
                   fullWidth
@@ -196,16 +190,12 @@
                   Log In
                 </Button>
                 <Grid container>
-                  <Grid item xs>
-                    <Link href="#" variant="body2">
-                      Forgot password?
-                    </Link>
-                  </Grid>
                   <Grid item>
                     <Link
                       to="/signup"
                       variant="body2"
                       onClick={() => navigate("/signup")}
+                      style={{ cursor: "pointer" }}
                     >
                       {"Create a new account"}
                     </Link>
Index: src/pages/stats/Stats.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect, useRef } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport prepareChartData from \"./prepareChart\";\r\nimport useBookingsStore from \"../../api/BookingStore\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport NavbarAdmin from \"../../components/navbarAdmin/NavbarAdmin\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst Stats = () => {\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  const [bookingsData, setBookingsData] = useState(null);\r\n  const [graphRange, setGraphRange] = useState(\"hourly\");\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      try {\r\n        await useBookingsStore.getState().fetchBookings();\r\n        setBookingsData(useBookingsStore.getState().bookings);\r\n      } catch (error) {\r\n        console.error(\"Error fetching bookings:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (bookingsData) {\r\n      const ctx = document.getElementById(\"bookingChart\").getContext(\"2d\");\r\n      const data = prepareChartData(bookingsData, graphRange);\r\n\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n\r\n      const newChartInstance = new Chart(ctx, {\r\n        type: \"bar\",\r\n        data: data,\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      chartInstanceRef.current = newChartInstance;\r\n    }\r\n  }, [bookingsData, graphRange]);\r\n\r\n  const handleRangeChange = (event) => {\r\n    setGraphRange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"statsPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <NavbarAdmin />\r\n        <Container>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: \"40px\",\r\n              paddingBottom: \"20px\",\r\n            }}\r\n          >\r\n            Booking Stats\r\n            <FormControl\r\n              style={{ position: \"absolute\", right: \"200px\", top: \"92px\" }}\r\n            >\r\n              <Select\r\n                id=\"graphRange\"\r\n                value={graphRange}\r\n                onChange={handleRangeChange}\r\n              >\r\n                <MenuItem value=\"hourly\">Hour</MenuItem>\r\n                <MenuItem value=\"weekly\">Day</MenuItem>\r\n                <MenuItem value=\"monthly\">Month</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Typography>\r\n          <Paper elevation={3} style={{ padding: \"10px\" }}>\r\n            <canvas id=\"bookingChart\" width=\"400\" height=\"100\"></canvas>\r\n          </Paper>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/stats/Stats.jsx b/src/pages/stats/Stats.jsx
--- a/src/pages/stats/Stats.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/stats/Stats.jsx	(date 1736716317945)
@@ -10,7 +10,7 @@
   MenuItem,
   Paper,
 } from "@mui/material";
-import NavbarAdmin from "../../components/navbarAdmin/NavbarAdmin";
+import NavbarAdmin from "../../components/navbar/NavbarAdmin";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
 
 const Stats = () => {
@@ -76,17 +76,14 @@
     <div data-testid="statsPage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <NavbarAdmin />
-        <Container>
-          <Typography
-            variant="h5"
-            style={{
-              display: "flex",
-              justifyContent: "space-between",
-              paddingTop: "40px",
-              paddingBottom: "20px",
-            }}
-          >
-            Booking Stats
+        <Typography
+          variant="h5"
+          gutterBottom
+          sx={{ fontSize: "30px", marginLeft: "25px", marginTop: "30px", marginBottom: "30px" }}
+        >
+          Booking Stats
+        </Typography>
+        <Container>
             <FormControl
               style={{ position: "absolute", right: "200px", top: "92px" }}
             >
@@ -100,7 +97,6 @@
                 <MenuItem value="monthly">Month</MenuItem>
               </Select>
             </FormControl>
-          </Typography>
           <Paper elevation={3} style={{ padding: "10px" }}>
             <canvas id="bookingChart" width="400" height="100"></canvas>
           </Paper>
Index: src/pages/platformHealth/EndpointRequestTable.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport EndPointLogStore from \"../../api/EndpointLogStore\";\r\nimport { Typography, Box, Paper } from \"@mui/material\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport NavbarAdmin from \"../../components/navbarAdmin/NavbarAdmin\";\r\nconst EndpointRequestsTable = () => {\r\n  const [requests, setRequests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    EndPointLogStore.getState()\r\n      .fetchLogs(1000, 0)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        EndPointLogStore.getState().setEndpointLogs(response);\r\n        setRequests(response);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  // Calculate counts and success percentage\r\n  const successfulRequestsCount = requests.filter(\r\n    (request) => request.status_code === 200\r\n  ).length;\r\n  const failedRequestsCount = requests.filter(\r\n    (request) => request.status_code !== 200\r\n  ).length;\r\n  const totalRequestsCount = requests.length;\r\n  const successPercentage = (\r\n    (successfulRequestsCount / totalRequestsCount) *\r\n    100\r\n  ).toFixed(2);\r\n  // Define color based on success percentage value\r\n  let successPercentageColor = \"\";\r\n  if (successPercentage >= 75) {\r\n    successPercentageColor = \"green\";\r\n  } else if (successPercentage >= 50) {\r\n    successPercentageColor = \"yellow\";\r\n  } else {\r\n    successPercentageColor = \"red\";\r\n  }\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"platformHealth-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <NavbarAdmin />\r\n        <Typography sx={{ marginTop: \"2%\", marginLeft: \"5%\" }}>\r\n          <h2>Endpoint Requests</h2>\r\n        </Typography>\r\n        <Box sx={{ padding: \"5%\" }}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"60px\",\r\n              marginLeft: \"4%\",\r\n            }}\r\n          >\r\n            <Paper elevation={5} sx={{ padding: \"30px\", marginRight: \"45px\" }}>\r\n              <Typography variant=\"h6\" color=\"green\">\r\n                Successful Requests\r\n              </Typography>\r\n              <Typography variant=\"h4\" color=\"green\" align=\"center\">\r\n                {successfulRequestsCount}\r\n              </Typography>\r\n            </Paper>\r\n            <Paper elevation={5} sx={{ padding: \"30px\", marginRight: \"45px\" }}>\r\n              <Typography variant=\"h6\" color=\"red\">\r\n                Failed Requests\r\n              </Typography>\r\n              <Typography variant=\"h4\" color=\"red\" align=\"center\">\r\n                {failedRequestsCount}\r\n              </Typography>\r\n            </Paper>\r\n            <Paper elevation={5} sx={{ padding: \"30px\" }}>\r\n              <Typography variant=\"h6\" color={successPercentageColor}>\r\n                Success Percentage\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                color={successPercentageColor}\r\n              >\r\n                {successPercentage}%\r\n              </Typography>\r\n            </Paper>\r\n          </Box>\r\n          <Paper elevation={4}>\r\n            <TableContainer width=\"80%\">\r\n              <Table>\r\n                <TableHead align=\"center\">\r\n                  <TableRow>\r\n                    <TableCell align=\"center\">Endpoint</TableCell>\r\n                    <TableCell align=\"center\">Method</TableCell>\r\n                    <TableCell align=\"center\">Status Code</TableCell>\r\n                    <TableCell align=\"center\">Duration</TableCell>\r\n                    <TableCell align=\"center\">Timestamp</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody align=\"center\">\r\n                  {requests.map((request) => (\r\n                    <TableRow key={request.id}>\r\n                      <TableCell align=\"center\">{request.path}</TableCell>\r\n                      <TableCell align=\"center\">{request.method}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {request.status_code}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{request.duration}</TableCell>\r\n                      <TableCell align=\"center\">{request.timestamp}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndpointRequestsTable;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/platformHealth/EndpointRequestTable.jsx b/src/pages/platformHealth/EndpointRequestTable.jsx
--- a/src/pages/platformHealth/EndpointRequestTable.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/platformHealth/EndpointRequestTable.jsx	(date 1736716943806)
@@ -8,9 +8,11 @@
 import TableHead from "@mui/material/TableHead";
 import TableRow from "@mui/material/TableRow";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
-import NavbarAdmin from "../../components/navbarAdmin/NavbarAdmin";
+import NavbarAdmin from "../../components/navbar/NavbarAdmin";
+
 const EndpointRequestsTable = () => {
   const [requests, setRequests] = useState([]);
+  const [loading, setLoading] = useState(true); // New state for loading
 
   useEffect(() => {
     EndPointLogStore.getState()
@@ -21,10 +23,10 @@
         EndPointLogStore.getState().setEndpointLogs(response);
         setRequests(response);
       })
-      .catch((error) => console.error(error));
+      .catch((error) => console.error(error))
+      .finally(() => setLoading(false)); // Set loading to false after data is fetched
   }, []);
 
-  // Calculate counts and success percentage
   const successfulRequestsCount = requests.filter(
     (request) => request.status_code === 200
   ).length;
@@ -32,11 +34,10 @@
     (request) => request.status_code !== 200
   ).length;
   const totalRequestsCount = requests.length;
-  const successPercentage = (
-    (successfulRequestsCount / totalRequestsCount) *
-    100
-  ).toFixed(2);
-  // Define color based on success percentage value
+  const successPercentage = totalRequestsCount
+    ? ((successfulRequestsCount / totalRequestsCount) * 100).toFixed(2)
+    : 0;
+
   let successPercentageColor = "";
   if (successPercentage >= 75) {
     successPercentageColor = "green";
@@ -54,7 +55,7 @@
     },
     typography: {
       fontFamily:
-        "Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif",
+        "Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif",
     },
   });
 
@@ -62,75 +63,105 @@
     <div data-testid="platformHealth-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <NavbarAdmin />
-        <Typography sx={{ marginTop: "2%", marginLeft: "5%" }}>
-          <h2>Endpoint Requests</h2>
+        <Typography
+          variant="h5"
+          gutterBottom
+          sx={{ fontSize: "30px", marginLeft: "25px", marginTop: "30px" }}
+        >
+          Endpoint Requests
         </Typography>
         <Box sx={{ padding: "5%" }}>
-          <Box
-            sx={{
-              display: "flex",
-              justifyContent: "center",
-              marginBottom: "60px",
-              marginLeft: "4%",
-            }}
-          >
-            <Paper elevation={5} sx={{ padding: "30px", marginRight: "45px" }}>
-              <Typography variant="h6" color="green">
-                Successful Requests
-              </Typography>
-              <Typography variant="h4" color="green" align="center">
-                {successfulRequestsCount}
-              </Typography>
-            </Paper>
-            <Paper elevation={5} sx={{ padding: "30px", marginRight: "45px" }}>
-              <Typography variant="h6" color="red">
-                Failed Requests
-              </Typography>
-              <Typography variant="h4" color="red" align="center">
-                {failedRequestsCount}
-              </Typography>
-            </Paper>
-            <Paper elevation={5} sx={{ padding: "30px" }}>
-              <Typography variant="h6" color={successPercentageColor}>
-                Success Percentage
-              </Typography>
-              <Typography
-                variant="h4"
-                align="center"
-                color={successPercentageColor}
-              >
-                {successPercentage}%
-              </Typography>
-            </Paper>
-          </Box>
-          <Paper elevation={4}>
-            <TableContainer width="80%">
-              <Table>
-                <TableHead align="center">
-                  <TableRow>
-                    <TableCell align="center">Endpoint</TableCell>
-                    <TableCell align="center">Method</TableCell>
-                    <TableCell align="center">Status Code</TableCell>
-                    <TableCell align="center">Duration</TableCell>
-                    <TableCell align="center">Timestamp</TableCell>
-                  </TableRow>
-                </TableHead>
-                <TableBody align="center">
-                  {requests.map((request) => (
-                    <TableRow key={request.id}>
-                      <TableCell align="center">{request.path}</TableCell>
-                      <TableCell align="center">{request.method}</TableCell>
-                      <TableCell align="center">
-                        {request.status_code}
-                      </TableCell>
-                      <TableCell align="center">{request.duration}</TableCell>
-                      <TableCell align="center">{request.timestamp}</TableCell>
-                    </TableRow>
-                  ))}
-                </TableBody>
-              </Table>
-            </TableContainer>
-          </Paper>
+          {loading ? ( // Show loading indicator while data is being fetched
+            <Box
+              sx={{
+                display: "flex",
+                justifyContent: "center",
+                alignItems: "center",
+                height: "200px",
+              }}
+            >
+              Loading...
+            </Box>
+          ) : (
+            <>
+              <Box
+                sx={{
+                  display: "flex",
+                  justifyContent: "center",
+                  marginBottom: "60px",
+                  marginLeft: "4%",
+                }}
+              >
+                <Paper
+                  elevation={5}
+                  sx={{ padding: "30px", marginRight: "45px" }}
+                >
+                  <Typography variant="h6" color="green">
+                    Successful Requests
+                  </Typography>
+                  <Typography variant="h4" color="green" align="center">
+                    {successfulRequestsCount}
+                  </Typography>
+                </Paper>
+                <Paper
+                  elevation={5}
+                  sx={{ padding: "30px", marginRight: "45px" }}
+                >
+                  <Typography variant="h6" color="red">
+                    Failed Requests
+                  </Typography>
+                  <Typography variant="h4" color="red" align="center">
+                    {failedRequestsCount}
+                  </Typography>
+                </Paper>
+                <Paper elevation={5} sx={{ padding: "30px" }}>
+                  <Typography variant="h6" color={successPercentageColor}>
+                    Success Percentage
+                  </Typography>
+                  <Typography
+                    variant="h4"
+                    align="center"
+                    color={successPercentageColor}
+                  >
+                    {successPercentage}%
+                  </Typography>
+                </Paper>
+              </Box>
+              <Paper elevation={4}>
+                <TableContainer width="80%">
+                  <Table>
+                    <TableHead align="center">
+                      <TableRow>
+                        <TableCell align="center">Endpoint</TableCell>
+                        <TableCell align="center">Method</TableCell>
+                        <TableCell align="center">Status Code</TableCell>
+                        <TableCell align="center">Duration</TableCell>
+                        <TableCell align="center">Timestamp</TableCell>
+                      </TableRow>
+                    </TableHead>
+                    <TableBody align="center">
+                      {requests
+                        .slice()
+                        .reverse()
+                        .map((request) => (
+                          <TableRow key={request.id}>
+                            <TableCell align="center">{request.path}</TableCell>
+                            <TableCell align="center">{request.method}</TableCell>
+                            <TableCell align="center">
+                              {request.status_code}
+                            </TableCell>
+                            <TableCell align="center">{request.duration}</TableCell>
+                            <TableCell align="center">
+                              {request.timestamp}
+                            </TableCell>
+                          </TableRow>
+                        ))}
+                    </TableBody>
+                  </Table>
+                </TableContainer>
+              </Paper>
+            </>
+          )}
         </Box>
       </ThemeProvider>
     </div>
Index: src/pages/policyEnforcement/Policy.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Pagination,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport SearchBar from \"./SearchUsers\";\r\nimport UserStore from \"../../api/UserStore\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport NavbarAdmin from \"../../components/navbarAdmin/NavbarAdmin\";\r\n\r\nconst PolicyPage = () => {\r\n  const itemsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [sortOption, setSortOption] = useState(\"default\");\r\n\r\n  useEffect(() => {\r\n    // Fetch user data when the component mounts\r\n    UserStore.getState()\r\n      .fetchUsers()\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Users:\", data);\r\n        setTotalPages(Math.ceil(data.length / itemsPerPage));\r\n        setUsers(data);\r\n        setFilteredUsers(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching users:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    const slicedUsers = users.slice(start, end);\r\n    setFilteredUsers(slicedUsers);\r\n  }, [currentPage, users]);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    const filteredUsers = users.filter(\r\n      (user) =>\r\n        user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        user.first_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        user.last_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredUsers(filteredUsers);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    const selectedSortOption = event.target.value;\r\n    setSortOption(selectedSortOption);\r\n\r\n    let sortedUsers;\r\n    switch (selectedSortOption) {\r\n      case \"alphabetical\":\r\n        sortedUsers = [...filteredUsers].sort((a, b) =>\r\n          a.username.localeCompare(b.username)\r\n        );\r\n        break;\r\n      // Add more sorting options if needed\r\n      default:\r\n        sortedUsers = [...users];\r\n        break;\r\n    }\r\n\r\n    setFilteredUsers(sortedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n  const handleDelete = async (id) => {\r\n    await UserStore.getState().deleteUser(id);\r\n    UserStore.getState()\r\n      .fetchUsers()\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Users:\", data);\r\n        setTotalPages(Math.ceil(data.length / itemsPerPage));\r\n        setUsers(data);\r\n        setFilteredUsers(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching users:\", error));\r\n  };\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"policyPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <NavbarAdmin />\r\n        <Typography\r\n          variant=\"h5\"\r\n          gutterBottom\r\n          sx={{ fontSize: \"30px\", marginLeft: \"25px\", marginTop: \"30px\" }}\r\n        >\r\n          List of Users\r\n        </Typography>\r\n        <Container>\r\n          <div style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"50px\",\r\n            gap: \"20px\"\r\n          }}>\r\n            <SearchBar onSearch={handleSearch}/>\r\n            <FormControl\r\n                style={{\r\n                  width: \"100%\",\r\n                  maxWidth: \"200px\",\r\n                }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"6px\", // Same border radius\r\n                    height: \"40px\", // Set consistent height\r\n                  },\r\n                }}\r\n            >\r\n              <InputLabel htmlFor=\"sort\">Sort by:</InputLabel>\r\n              <Select\r\n                  id=\"sort\"\r\n                  value={sortOption}\r\n                  onChange={handleSortChange}\r\n                  label=\"Sort by\"\r\n              >\r\n                <MenuItem value=\"default\">Default</MenuItem>\r\n                <MenuItem value=\"alphabetical\">Alphabetical</MenuItem>\r\n                <MenuItem value=\"price\">Price</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Paper elevation={4}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead align=\"center\">\r\n                  <TableRow>\r\n                    <TableCell align=\"center\">User ID</TableCell>\r\n                    <TableCell align=\"center\">Username</TableCell>\r\n                    <TableCell align=\"center\">First Name</TableCell>\r\n                    <TableCell align=\"center\">Last Name</TableCell>\r\n                    <TableCell align=\"center\">Email</TableCell>\r\n                    <TableCell align=\"center\">Date Joined</TableCell>\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody align=\"center\">\r\n                  {filteredUsers.map((user) => (\r\n                      <TableRow key={user.id}>\r\n                        <TableCell align=\"center\">{user.id}</TableCell>\r\n                        <TableCell align=\"center\">{user.username}</TableCell>\r\n                        <TableCell align=\"center\">{user.first_name}</TableCell>\r\n                        <TableCell align=\"center\">{user.last_name}</TableCell>\r\n                        <TableCell align=\"center\">{user.email}</TableCell>\r\n                        <TableCell align=\"center\">{user.date_joined}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button\r\n                              variant=\"outlined\"\r\n                              color=\"error\"\r\n                              onClick={() => handleDelete(user.id)}\r\n                          >\r\n                            Delete Account\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n\r\n          <Pagination\r\n              sx={{marginLeft: \"88%\", marginTop: \"50px\"}}\r\n              count={totalPages}\r\n              page={currentPage}\r\n              onChange={handlePageChange}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n          />\r\n          <Typography\r\n              variant=\"body2\"\r\n              sx={{marginLeft: \"91%\", marginTop: \"10px\"}}\r\n          >{`Page ${currentPage} of ${totalPages}`}</Typography>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PolicyPage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/policyEnforcement/Policy.jsx b/src/pages/policyEnforcement/Policy.jsx
--- a/src/pages/policyEnforcement/Policy.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/policyEnforcement/Policy.jsx	(date 1736717670168)
@@ -19,7 +19,7 @@
 import TableContainer from "@mui/material/TableContainer";
 import TableHead from "@mui/material/TableHead";
 import TableRow from "@mui/material/TableRow";
-import NavbarAdmin from "../../components/navbarAdmin/NavbarAdmin";
+import NavbarAdmin from "../../components/navbar/NavbarAdmin";
 
 const PolicyPage = () => {
   const itemsPerPage = 10;
@@ -105,7 +105,7 @@
     },
     typography: {
       fontFamily:
-        "Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif",
+        "Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif",
     },
   });
 
@@ -193,19 +193,20 @@
               </Table>
             </TableContainer>
           </Paper>
-
-          <Pagination
-              sx={{marginLeft: "88%", marginTop: "50px"}}
-              count={totalPages}
-              page={currentPage}
-              onChange={handlePageChange}
-              color="primary"
-              size="large"
-          />
-          <Typography
-              variant="body2"
-              sx={{marginLeft: "91%", marginTop: "10px"}}
-          >{`Page ${currentPage} of ${totalPages}`}</Typography>
+          <div style={{display: "flex", flexDirection: "row", justifyContent: "flex-end", alignItems: "center", marginTop: "40px", marginBottom: "40px"}}>
+            <Pagination
+                count={totalPages}
+                page={currentPage}
+                onChange={handlePageChange}
+                color="primary"
+                size="large"
+            />
+            <Typography
+                variant="body2"
+            >
+              {`Page ${currentPage} of ${totalPages}`}
+            </Typography>
+          </div>
         </Container>
       </ThemeProvider>
     </div>
Index: src/components/navbarAdmin/NavbarAdmin.jsx
===================================================================
diff --git a/src/components/navbarAdmin/NavbarAdmin.jsx b/src/components/navbarAdmin/NavbarAdmin.jsx
deleted file mode 100644
--- a/src/components/navbarAdmin/NavbarAdmin.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ /dev/null	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
@@ -1,72 +0,0 @@
-import React from "react";
-import { Link } from "react-router-dom";
-import AppBar from "@mui/material/AppBar";
-import Toolbar from "@mui/material/Toolbar";
-import Typography from "@mui/material/Typography";
-import Button from "@mui/material/Button";
-import { createTheme, ThemeProvider } from "@mui/material/styles";
-import LoginStore from "../../api/LoginStore";
-
-const theme = createTheme({
-  palette: {
-    primary: {
-      main: "#000000", // Set primary color to black
-    },
-  },
-  typography: {
-    fontFamily:
-      "Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif",
-  },
-});
-
-const NavbarAdmin = () => {
-  return (
-    <div data-testid="navbar-1">
-      <ThemeProvider theme={theme}>
-        <AppBar position="static">
-          <Toolbar>
-            <Typography variant="h5" component="div" sx={{ flexGrow: 1 }}>
-              Find your space Admin
-            </Typography>
-            <div>
-              <Button
-                component={Link}
-                to="/admin/platform-health"
-                color="inherit"
-              >
-                Platform Health
-              </Button>
-              <Button component={Link} to="/admin/stats" color="inherit">
-                Admin Analytics
-              </Button>
-              <Button
-                component={Link}
-                to="/admin/policy-enforcement"
-                color="inherit"
-              >
-                Policy Enforcement
-              </Button>
-              <Button
-                component={Link}
-                to="/admin/review-spaces"
-                color="inherit"
-              >
-                Review Spaces
-              </Button>
-              <Button
-                component={Link}
-                to="/"
-                color="inherit"
-                onClick={LoginStore.getState().logout}
-              >
-                Log Out
-              </Button>
-            </div>
-          </Toolbar>
-        </AppBar>
-      </ThemeProvider>
-    </div>
-  );
-};
-
-export default NavbarAdmin;
Index: src/components/navbar/Navbar.jsx
===================================================================
diff --git a/src/components/navbar/Navbar.jsx b/src/components/navbar/Navbar.jsx
deleted file mode 100644
--- a/src/components/navbar/Navbar.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ /dev/null	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
@@ -1,108 +0,0 @@
-import React from "react";
-import { useState, useEffect } from "react";
-import { Link } from "react-router-dom";
-import AppBar from "@mui/material/AppBar";
-import Toolbar from "@mui/material/Toolbar";
-import Typography from "@mui/material/Typography";
-import Button from "@mui/material/Button";
-import { createTheme, ThemeProvider } from "@mui/material/styles";
-import LoginStore from "../../api/LoginStore";
-
-const theme = createTheme({
-  palette: {
-    primary: {
-      main: "#000000", // Set primary color to black
-    },
-  },
-  typography: {
-    fontFamily:
-      "Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif",
-  },
-});
-
-const Navbar = () => {
-
-  const [isLoggedIn, setIsLoggedIn] = useState(
-    () => LoginStore.getState().userData !== null
-  );
-
-  useEffect(() => {
-    const unsubscribe = LoginStore.subscribe((state) =>
-      setIsLoggedIn(state.userData !== null)
-    );
-    return () => unsubscribe();
-  }, []);
-
-  const handleLogout = async () => {
-    await LoginStore.getState().logout();
-    setIsLoggedIn(false); // Explicitly set state after logout completes
-  };
-
-  return (
-    <div data-testid="navbar-1">
-      <ThemeProvider theme={theme}>
-        <AppBar position="fixed">
-          <Toolbar>
-            <Typography
-              variant="h5"
-              component="div"
-              sx={{ flexGrow: 1, fontWeight: "bold" }}
-            >
-              Find your space
-            </Typography>
-            <div>
-              {isLoggedIn ? (
-                <>
-                  <Button component={Link} to="/spaces" color="inherit">
-                    Find spaces
-                  </Button>
-                  <Button
-                    component={Link}
-                    to="/booking-history"
-                    color="inherit"
-                  >
-                    Booking History
-                  </Button>
-                  <Button component={Link} to="/add" color="inherit">
-                    Rent out my space
-                  </Button>
-                  <Button component={Link} to="/myspaces" color="inherit">
-                    My Spaces
-                  </Button>
-                  <Button component={Link} to="/profile" color="inherit">
-                    Profile
-                  </Button>
-                  <Button component={Link} to="/contact-us" color="inherit">
-                    Contact Us
-                  </Button>
-                  <Button
-                    component={Link}
-                    to="/"
-                    color="inherit"
-                    onClick={handleLogout}
-                  >
-                    Log Out
-                  </Button>
-                </>
-              ) : (
-                <>
-                  <Button component={Link} to="/spaces" color="inherit">
-                    Find spaces
-                  </Button>
-                  <Button component={Link} to="/contact-us" color="inherit">
-                    Contact Us
-                  </Button>
-                  <Button component={Link} to="/" color="inherit">
-                    Login
-                  </Button>
-                </>
-              )}
-            </div>
-          </Toolbar>
-        </AppBar>
-      </ThemeProvider>
-    </div>
-  );
-};
-
-export default Navbar;
Index: src/components/navbarAdmin/navbarAdmin.css
===================================================================
diff --git a/src/components/navbarAdmin/navbarAdmin.css b/src/components/navbarAdmin/navbarAdmin.css
deleted file mode 100644
--- a/src/components/navbarAdmin/navbarAdmin.css	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ /dev/null	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
@@ -1,36 +0,0 @@
-.navbar{
-  height: 50px;
-  width: 100%;
-  background-color: black;
-  display: flex;
-  justify-content: center;
-}
-
-.navContainer{
-  width: 100%;
-  color: white;
-  display: flex;
-  align-items: center ;
-  justify-content: space-around;
-  background-color: black;
-}
-
-.logo{
-  font-weight: 1000;
-  font-size: x-large;
-  color: white;
-  font-family: "Dubai Medium", serif;
-}
-
-.navButton{
-  margin-left: 20px;
-  border: none;
-  padding: 5px 10px;
-  cursor: pointer;
-  color: #003580;
-}
-/* Navbar.css */
-
-.navbar-divider {
-  border-bottom: 1px solid #ffffff; /* Adjust the thickness and color as needed */
-}
Index: src/pages/signup/Signup.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SignupStore from \"../../api/SignupStore\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        findaspace.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\", // Set primary color to black\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst Signup = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Validation functions\r\n  const validateUsername = (value) => {\r\n    const usernameRegex = /^[a-zA-Z][a-zA-Z0-9]{5,25}$/;\r\n    if (!usernameRegex.test(value)) {\r\n      if (value.length < 6 || value.length > 26) {\r\n        setUsernameError(\"Username must be between 6 and 26 characters.\");\r\n      } else if (!/^[a-zA-Z]/.test(value)) {\r\n        setUsernameError(\"Username must start with an alphabetical character.\");\r\n      } else if (!/^[a-zA-Z0-9]+$/.test(value)) {\r\n        setUsernameError(\"Username can only contain alphanumeric characters.\");\r\n      } else {\r\n        setUsernameError(\"Invalid username.\");\r\n      }\r\n      return false;\r\n    }\r\n    setUsernameError(\"\");\r\n    return true;\r\n  };\r\n\r\n  const validateEmail = (value) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(value)) {\r\n      setEmailError(\"Invalid email address.\");\r\n      return false;\r\n    }\r\n    setEmailError(\"\");\r\n    return true;\r\n  };\r\n\r\n  const validatePassword = (value) => {\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,32}$/;\r\n\r\n    if (!passwordRegex.test(value)) {\r\n      if (value.length < 8 || value.length > 32) {\r\n        setPasswordError(\"Password must be between 8 and 32 characters long.\");\r\n      } else if (!/[A-Za-z]/.test(value)) {\r\n        setPasswordError(\"Password must contain at least one letter.\");\r\n      } else if (!/\\d/.test(value)) {\r\n        setPasswordError(\"Password must contain at least one number.\");\r\n      } else {\r\n        setPasswordError(\"Invalid password format.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    setPasswordError(\"\");\r\n    return true;\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    const value = e.target.value;\r\n    setUsername(value);\r\n    validateUsername(value);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    const value = e.target.value;\r\n    setEmail(value);\r\n    validateEmail(value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n    validatePassword(value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    const value = e.target.value;\r\n    setConfirmPassword(value);\r\n  };\r\n\r\n  const makeSignupRequest = () => {\r\n    // TODO: change to email or username and update .login() method\r\n\r\n    SignupStore.getState()\r\n      .signup(username, email, password, confirmPassword)\r\n      .then(() => {\r\n        setConfirmationOpen(true);\r\n        console.log(\"ConfirmationOpen set to true.\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        if (error.message === \"Passwords do not match\") {\r\n          setConfirmPasswordError(error.message);\r\n        } else if (error.message === \"Username already exists\") {\r\n          setUsernameError(error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleConfirmationClose = () => {\r\n    console.log(\"Code comes inside handleConfirmationClose\");\r\n    console.log(\"ConfirmationOpen value:\", confirmationOpen);\r\n    setConfirmationOpen(false);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isUsernameValid = validateUsername(username);\r\n    const isEmailValid = validateEmail(email);\r\n    const isPasswordValid = validatePassword(password);\r\n\r\n    if (isUsernameValid && isEmailValid && isPasswordValid) {\r\n      console.log(\"Signup data:\", {\r\n        username,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n      });\r\n      makeSignupRequest();\r\n    } else {\r\n      console.log(\"Form validation failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"signupPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <Grid\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"40px\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              padding: { xs: \"24px\", md: \"32px\" },\r\n              margin: { xs: \"16px\", md: \"32px\" },\r\n              boxShadow: \"0px 0px 16px rgba(0, 0, 0, 0.1)\",\r\n              borderRadius: \"8px\",\r\n              backgroundColor: \"#fff\",\r\n              width: \"50%\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              sx={{\r\n                fontSize: \"30px\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Let's Create an account at Find your space!\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={handleUsernameChange}\r\n                error={!!usernameError}\r\n                helperText={usernameError}\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n                error={!!emailError}\r\n                helperText={emailError}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password1\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                error={!!passwordError}\r\n                helperText={passwordError}\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password2\"\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPasswordChange}\r\n                error={!!confirmPasswordError}\r\n                helperText={confirmPasswordError}\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Create Account\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs></Grid>\r\n                <Grid item>\r\n                  <Link to=\"/\" variant=\"body2\" onClick={() => navigate(\"/\")}>\r\n                    {\"Already have an account?\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Copyright sx={{ mt: 5 }} />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Snackbar\r\n          open={confirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handleConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            Your account has been created!\r\n          </Alert>\r\n        </Snackbar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/signup/Signup.jsx b/src/pages/signup/Signup.jsx
--- a/src/pages/signup/Signup.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/signup/Signup.jsx	(date 1736720027781)
@@ -1,6 +1,6 @@
 import React, { useState } from "react";
 import { useNavigate } from "react-router-dom";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import Button from "@mui/material/Button";
 import TextField from "@mui/material/TextField";
 import Link from "@mui/material/Link";
@@ -177,7 +177,7 @@
   return (
     <div data-testid="signupPage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <Grid
           sx={{
             display: "flex",
Index: src/pages/profile/Profile.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\nimport ProfileStore from \"../../api/ProfileStore\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: { main: \"#000000\" },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    contactInfo: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [passwordData, setPasswordData] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const [userInfoErrors, setUserInfoErrors] = useState({});\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [resetError, setresetError] = useState(\"\");\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n  const [passChangeConfirmationOpen, setPassChangeConfirmationOpen] =\r\n    useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const username = LoginStore.getState().userData.username;\r\n        await ProfileStore.getState().fetchUserProfile(username);\r\n        const fetchedData = ProfileStore.getState().userData;\r\n        setUserData(fetchedData);\r\n        console.log(\"User Data Fetched From Store \", fetchedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const validatePassword = (value) => {\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,32}$/;\r\n\r\n    if (!passwordRegex.test(value)) {\r\n      if (value.length < 8 || value.length > 32) {\r\n        setPasswordError(\"Password must be between 8 and 32 characters long.\");\r\n      } else if (!/[A-Za-z]/.test(value)) {\r\n        setPasswordError(\"Password must contain at least one letter.\");\r\n      } else if (!/\\d/.test(value)) {\r\n        setPasswordError(\"Password must contain at least one number.\");\r\n      } else {\r\n        setPasswordError(\"Invalid password format.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    setPasswordError(\"\");\r\n    return true;\r\n  };\r\n\r\n  const validateField = (name, value) => {\r\n    let error = \"\";\r\n    switch (name) {\r\n      case \"first_name\":\r\n        if (value.trim().length <= 2) {\r\n          error = `First name is not valid.`;\r\n        }\r\n        break;\r\n      case \"last_name\":\r\n        if (value.trim().length <= 2) {\r\n          error = `Last name is not valid.`;\r\n        } else if (!/^[a-zA-Z]+$/.test(value)) {\r\n          error = `${name.replace(\"_\", \" \")} can only contain letters.`;\r\n        }\r\n        break;\r\n      case \"email\":\r\n        if (value.trim().length <= 2) {\r\n          error = \"Email is required.\";\r\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n          error = \"Invalid email address.\";\r\n        }\r\n        break;\r\n      case \"contactInfo\":\r\n        if (value.trim().length !== 9) {\r\n          error = \"Contact Info is required.\";\r\n        } else if (!/^\\d+$/.test(value)) {\r\n          error = \"Contact Info can only contain numbers.\";\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setUserInfoErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: error,\r\n    }));\r\n    return !error;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    validateField(name, value);\r\n    console.log(\"Changed data \", userData);\r\n  };\r\n\r\n  const handlePasswordInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswordData({\r\n      ...passwordData,\r\n      [name]: value,\r\n    });\r\n    if (name === \"password\") {\r\n      validatePassword(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const isValid = Object.keys(userData).every((field) =>\r\n      validateField(field, userData[field])\r\n    );\r\n\r\n    if (!isValid) {\r\n      console.log(\"Form validation failed.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await ProfileStore.getState().updateUserProfile(userData);\r\n      setConfirmationOpen(true);\r\n      console.log(\"Profile updated successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n    }\r\n  };\r\n\r\n  const handleConfirmationClose = () => {\r\n    console.log(\"Code comes inside handleConfirmationClose\");\r\n    console.log(\"ConfirmationOpen value:\", confirmationOpen);\r\n    setConfirmationOpen(false);\r\n  };\r\n\r\n  const handlePassChangeConfirmationClose = () => {\r\n    console.log(\"Code comes inside handlePassChangeConfirmationClose\");\r\n    console.log(\r\n      \"PassChangeConfirmationClose value:\",\r\n      passChangeConfirmationOpen\r\n    );\r\n    setPassChangeConfirmationOpen(false);\r\n  };\r\n\r\n  // Handle password change form submission\r\n  const handlePasswordChangeSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { password, confirm_password } = passwordData;\r\n\r\n    // Validate password\r\n    if (!validatePassword(password)) {\r\n      return;\r\n    }\r\n\r\n    // Validate if passwords match\r\n    if (password !== confirm_password) {\r\n      setresetError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const updatedUserData = {\r\n        ...userData,\r\n        password: password,\r\n      };\r\n\r\n      await ProfileStore.getState().updateUserProfile(updatedUserData);\r\n      setPassChangeConfirmationOpen(true);\r\n      setPasswordData({ password: \"\", confirm_password: \"\" });\r\n      setresetError(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      setresetError(\"Failed to update profile\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"profilePage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <Grid\r\n          container\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"40px\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              padding: 4,\r\n              boxShadow: 2,\r\n              borderRadius: \"9px\",\r\n              backgroundColor: \"#fff\",\r\n              width: \"40%\",\r\n              textAlign: \"center\",\r\n              marginTop: 5,\r\n              marginBottom: 5,\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              sx={{ fontSize: \"30px\", textAlign: \"center\" }}\r\n            >\r\n              Profile Details\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"firstname\"\r\n                label=\"First Name\"\r\n                name=\"first_name\"\r\n                value={userData.first_name}\r\n                onChange={handleInputChange}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\",\r\n                  },\r\n                }}\r\n                error={!!userInfoErrors.first_name}\r\n                helperText={userInfoErrors.first_name}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"lastname\"\r\n                label=\"Last Name\"\r\n                name=\"last_name\"\r\n                value={userData.last_name}\r\n                onChange={handleInputChange}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\",\r\n                  },\r\n                }}\r\n                error={!!userInfoErrors.last_name}\r\n                helperText={userInfoErrors.last_name}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleInputChange}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\",\r\n                  },\r\n                }}\r\n                error={!!userInfoErrors.email}\r\n                helperText={userInfoErrors.email}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"contactinfo\"\r\n                label=\"Contact Info\"\r\n                type=\"tel\"\r\n                name=\"contactInfo\"\r\n                value={userData.contactInfo}\r\n                onChange={handleInputChange}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\",\r\n                  },\r\n                }}\r\n                error={!!userInfoErrors.contactInfo}\r\n                helperText={userInfoErrors.contactInfo}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                sx={{ color: \"#fff\", backgroundColor: \"#000\", marginY: 2 }}\r\n                style={{ marginTop: 20, borderRadius: 7 }}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              padding: 4,\r\n              boxShadow: 2,\r\n              borderRadius: \"9px\",\r\n              backgroundColor: \"#fff\",\r\n              width: \"40%\",\r\n              textAlign: \"center\",\r\n              marginTop: 5,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              sx={{ fontSize: \"24px\", textAlign: \"center\" }}\r\n            >\r\n              Reset or Change Password\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handlePasswordChangeSubmit}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handlePasswordInputChange}\r\n                value={passwordData.password}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\",\r\n                  },\r\n                }}\r\n                error={!!passwordError}\r\n                helperText={passwordError}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm_password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirm_password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handlePasswordInputChange}\r\n                value={passwordData.confirm_password}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\",\r\n                  },\r\n                }}\r\n                error={!!resetError}\r\n                helperText={resetError}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                sx={{ color: \"#fff\", backgroundColor: \"#000\", marginY: 2 }}\r\n                style={{ marginTop: 20, borderRadius: 7 }}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Snackbar\r\n          open={confirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handleConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\", border: \"2px border green\" }}\r\n          >\r\n            Your profile has been updated successfully!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          open={passChangeConfirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handlePassChangeConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlePassChangeConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\", border: \"2px border green\" }}\r\n          >\r\n            Your password has been changes successfully!\r\n          </Alert>\r\n        </Snackbar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/profile/Profile.jsx b/src/pages/profile/Profile.jsx
--- a/src/pages/profile/Profile.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/profile/Profile.jsx	(date 1736720027795)
@@ -1,6 +1,6 @@
 import React, { useState, useEffect } from "react";
 import LoginStore from "../../api/LoginStore";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import Button from "@mui/material/Button";
 import CssBaseline from "@mui/material/CssBaseline";
 import TextField from "@mui/material/TextField";
@@ -209,7 +209,7 @@
     <div data-testid="profilePage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <CssBaseline />
-        <Navbar />
+        <NavbarUser />
         <Grid
           container
           sx={{
Index: src/pages/reviews/Reviews.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport { Container, Pagination } from \"@mui/material\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport ReviewsStore from \"../../api/ReviewsStore\";\r\nimport ReviewItem from \"../../components/reviewItems/reviewItem\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Reviews = () => {\r\n  const { id } = useParams();\r\n  const itemsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const listRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ReviewsStore.getState().fetchReviewsBySpaceId(\r\n          id\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setReviews(data);\r\n        setTotalPages(Math.ceil(data.length / itemsPerPage));\r\n      } catch (error) {\r\n        console.error(\"Error fetching reviews:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n    if (listRef.current) {\r\n      listRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"reviewsPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <div>\r\n          <Navbar />\r\n          <Stack\r\n            direction=\"row\"\r\n            spacing={150}\r\n            sx={{ marginLeft: \"25px\", marginTop: \"30px\" }}\r\n          >\r\n            <Typography variant=\"h5\" gutterBottom sx={{ fontSize: \"30px\" }}>\r\n              Reviews\r\n            </Typography>\r\n            <Button\r\n              component={Link}\r\n              to={`/create-review/${id}`}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              width=\"100px\"\r\n              size=\"large\"\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              Add a Review\r\n            </Button>\r\n          </Stack>\r\n\r\n          <Container ref={listRef}>\r\n            <div className=\"listContainer\">\r\n              <Box\r\n                sx={{\r\n                  marginLeft: \"15%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div>\r\n                  {reviews.map((review) => (\r\n                    <ReviewItem\r\n                      sx={{ marginBottom: \"50px\" }}\r\n                      key={review.id}\r\n                      review={review}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Box>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  alignItems: \"center\",\r\n                  paddingTop: \"20px\", // Adjust as needed\r\n                  marginBottom: \"30px\",\r\n                }}\r\n              >\r\n                <Pagination\r\n                  count={totalPages}\r\n                  page={currentPage}\r\n                  onChange={handlePageChange}\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                />\r\n                <div style={{ marginLeft: \"20px\" }}>\r\n                  Page {currentPage} of {totalPages}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/reviews/Reviews.jsx b/src/pages/reviews/Reviews.jsx
--- a/src/pages/reviews/Reviews.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/reviews/Reviews.jsx	(date 1736720027798)
@@ -1,6 +1,6 @@
 import React, { useState, useEffect } from "react";
 import { Container, Pagination } from "@mui/material";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import ReviewsStore from "../../api/ReviewsStore";
 import ReviewItem from "../../components/reviewItems/reviewItem";
 import { useParams } from "react-router-dom";
@@ -60,7 +60,7 @@
     <div data-testid="reviewsPage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <div>
-          <Navbar />
+          <NavbarUser />
           <Stack
             direction="row"
             spacing={150}
Index: src/pages/reviews/AddReview.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useRef, useState } from \"react\";\r\nimport { TextField, Button, Box, Typography } from \"@mui/material\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\nimport ReviewsStore from \"../../api/ReviewsStore\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst AddReviewForm = () => {\r\n  const navigate = useNavigate();\r\n  var userData = LoginStore.getState().userData;\r\n  if (userData == null) {\r\n    userData = {\r\n      username: \"\",\r\n      id: 0,\r\n    };\r\n  }\r\n\r\n  const { id } = useParams();\r\n  const [reviewData, setReviewData] = useState({\r\n    title: \"\",\r\n    rating: \"\",\r\n    description: \"\",\r\n    client: userData.id,\r\n    adSpace: id,\r\n  });\r\n\r\n  const initialReviewData = {\r\n    title: \"\",\r\n    rating: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setReviewData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    console.log(\"Changed data \", reviewData);\r\n  };\r\n\r\n  const form = useRef();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await ReviewsStore.getState().createReview(reviewData);\r\n      setReviewData(initialReviewData);\r\n      navigate(`/reviews/${id}`);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"addReviewForm-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            margin: \"auto\",\r\n            padding: 4,\r\n            backgroundColor: \"#f5f5f5\",\r\n            borderRadius: 8,\r\n            boxShadow: 2,\r\n            marginTop: 10,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Add Review\r\n          </Typography>\r\n          <form ref={form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"title\"\r\n              value={reviewData.title}\r\n              onChange={handleInputChange}\r\n              required\r\n              size=\"large\"\r\n            />\r\n            <TextField\r\n              label=\"Rating\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"number\"\r\n              margin=\"normal\"\r\n              name=\"rating\"\r\n              value={reviewData.rating}\r\n              onChange={handleInputChange}\r\n              required\r\n              size=\"large\"\r\n            />\r\n            <TextField\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"description\"\r\n              value={reviewData.description}\r\n              onChange={handleInputChange}\r\n              required\r\n              size=\"large\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              size=\"large\"\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              Create Review\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewForm;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/reviews/AddReview.jsx b/src/pages/reviews/AddReview.jsx
--- a/src/pages/reviews/AddReview.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/reviews/AddReview.jsx	(date 1736720027765)
@@ -1,6 +1,6 @@
 import React, { useRef, useState } from "react";
 import { TextField, Button, Box, Typography } from "@mui/material";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import CssBaseline from "@mui/material/CssBaseline";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
 import { useNavigate, useParams } from "react-router-dom";
@@ -70,7 +70,7 @@
     <div data-testid="addReviewForm-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <CssBaseline />
-        <Navbar />
+        <NavbarUser />
         <Box
           sx={{
             width: "100%",
Index: src/pages/add/add.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Typography,\r\n  Box,\r\n  Snackbar,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport AddOfficeStore from \"../../api/AddOfficeStore\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst AddOfficeSpaceForm = () => {\r\n  const navigate = useNavigate();\r\n  var loginInfo = LoginStore.getState().userData;\r\n  if (loginInfo == null) {\r\n    loginInfo = {\r\n      username: \"\",\r\n      id: 0,\r\n    };\r\n  }\r\n  const ownerId = loginInfo.id;\r\n  const [errors, setErrors] = useState({});\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n\r\n  console.log(ownerId);\r\n\r\n  const [formData, setFormData] = useState({\r\n    price: null,\r\n    location: null,\r\n    size: null,\r\n    availability: \"true\",\r\n    isApproved: \"false\",\r\n    photos: null,\r\n    owner: ownerId,\r\n  });\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\", // Set primary color to black\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  const validateField = (field, value) => {\r\n    let error = \"\";\r\n    console.log(`Validating ${field} with value ${value}`);\r\n    switch (field) {\r\n      case \"location\":\r\n        if (value === null || value.trim().length <= 2) {\r\n          error = \"Location is not valid.\";\r\n          console.log(\"Error in location field\");\r\n        }\r\n        break;\r\n      case \"photos\":\r\n        if (\r\n          value === null ||\r\n          (value.trim() && !/^(https?:\\/\\/[^\\s$.?#].[^\\s]*)$/i.test(value))\r\n        ) {\r\n          error = \"Invalid URL format.\";\r\n          console.log(\"Error in photos field\");\r\n        }\r\n        break;\r\n      case \"size\":\r\n        if (value === null || isNaN(value) || Number(value) <= 0) {\r\n          error = \"Size must be a positive number.\";\r\n          console.log(\"Error in size field\");\r\n        }\r\n        break;\r\n      case \"price\":\r\n        if (value === null || isNaN(value) || Number(value) <= 0) {\r\n          error = \"Price must be a positive number.\";\r\n          console.log(\"Error in price field\");\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n\r\n    const error = validateField(field, value);\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [field]: error || \"\", // Clear the error if the field is valid\r\n    }));\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    Object.keys(formData).forEach((field) => {\r\n      const error = validateField(field, formData[field]);\r\n      if (error) {\r\n        newErrors[field] = error;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (!isValid) {\r\n      console.log(\"Form validation failed.\");\r\n      console.log(\"Form validation errors\", newErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await AddOfficeStore.getState().createAdSpace(formData);\r\n      setConfirmationOpen(true); // Show confirmation message\r\n    } catch (error) {\r\n      console.error(\"Error adding AdSpace data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleConfirmationClose = () => {\r\n    console.log(\"Code comes inside handleConfirmationClose\");\r\n    console.log(\"ConfirmationOpen value:\", confirmationOpen);\r\n    setConfirmationOpen(false);\r\n    navigate(\"/spaces\");\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    navigate(\"/spaces\");\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"addOfficeSpaceForm-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={theme}>\r\n        <Navbar />\r\n        <div className=\"ad_space_form\">\r\n          <Typography\r\n            variant=\"h5\"\r\n            gutterBottom\r\n            sx={{\r\n              fontSize: \"30px\",\r\n              marginLeft: \"25px\",\r\n              marginTop: \"30px\",\r\n              marginBottom: \"30px\",\r\n            }}\r\n          >\r\n            Create A New Advertisement Space Listing\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              padding: { xs: \"24px\", md: \"32px\" },\r\n              margin: { xs: \"16px\", md: \"32px\" },\r\n              boxShadow: \"0px 0px 16px rgba(0, 0, 0, 0.1)\",\r\n              borderRadius: \"9px\",\r\n              backgroundColor: \"#fff\",\r\n            }}\r\n          >\r\n            <form onSubmit={submitHandler}>\r\n              <TextField\r\n                label=\"Location\"\r\n                placeholder=\"Location\"\r\n                value={formData.location}\r\n                onChange={(e) => handleInputChange(\"location\", e.target.value)}\r\n                fullWidth\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n                margin=\"normal\"\r\n                error={!!errors.location}\r\n                helperText={errors.location}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Image URL\"\r\n                placeholder=\"Image URL\"\r\n                value={formData.photos}\r\n                onChange={(e) => handleInputChange(\"photos\", e.target.value)}\r\n                fullWidth\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n                margin=\"normal\"\r\n                error={!!errors.photos}\r\n                helperText={errors.photos}\r\n              />\r\n\r\n              {formData.photos && (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\", // Flexbox for centering\r\n                    justifyContent: \"center\", // Center horizontally\r\n                    alignItems: \"center\", // Center vertically\r\n                    margin: \"20px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={formData.photos}\r\n                    alt=\"Office Space\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      height: \"50%\",\r\n                      objectFit: \"contain\",\r\n                      borderRadius: \"13px\", // Apply rounded corners\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <TextField\r\n                label=\"Size\"\r\n                placeholder=\"Size\"\r\n                value={formData.size}\r\n                type=\"number\"\r\n                onChange={(e) => handleInputChange(\"size\", e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n                error={!!errors.size}\r\n                helperText={errors.size}\r\n              />\r\n              <TextField\r\n                label=\"Price\"\r\n                placeholder=\"Price\"\r\n                value={formData.price}\r\n                type=\"number\"\r\n                onChange={(e) => handleInputChange(\"price\", e.target.value)}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                sx={{\r\n                  marginBottom: \"20px\",\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"9px\", // Custom border radius\r\n                  },\r\n                }}\r\n                error={!!errors.price}\r\n                helperText={errors.price}\r\n              />\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                marginTop={3}\r\n                sx={{ paddingLeft: \"1.25%\", paddingRight: \"1.25%\" }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"error\"\r\n                  onClick={cancelHandler}\r\n                  style={{ borderRadius: \"7px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{ color: \"#fff\", backgroundColor: \"#000\" }}\r\n                  style={{ borderRadius: \"7px\" }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Stack>\r\n            </form>\r\n          </Box>\r\n        </div>\r\n        <Snackbar\r\n          open={confirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handleConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\", border: \"2px solid green\" }}\r\n          >\r\n            Your ad space has been submitted for review!\r\n          </Alert>\r\n        </Snackbar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\nexport default AddOfficeSpaceForm;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/add/add.js b/src/pages/add/add.js
--- a/src/pages/add/add.js	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/add/add.js	(date 1736720027771)
@@ -9,7 +9,7 @@
   Snackbar,
   Alert,
 } from "@mui/material";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import AddOfficeStore from "../../api/AddOfficeStore";
 import LoginStore from "../../api/LoginStore";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
@@ -145,7 +145,7 @@
   return (
     <div data-testid="addOfficeSpaceForm-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={theme}>
-        <Navbar />
+        <NavbarUser />
         <div className="ad_space_form">
           <Typography
             variant="h5"
Index: src/components/navbar/NavbarUser.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navbar/NavbarUser.jsx b/src/components/navbar/NavbarUser.jsx
new file mode 100644
--- /dev/null	(date 1736720027829)
+++ b/src/components/navbar/NavbarUser.jsx	(date 1736720027829)
@@ -0,0 +1,47 @@
+// NavbarUser.jsx
+import React, { useState, useEffect } from "react";
+import NavbarBase from "./NavbarBase";
+import LoginStore from "../../api/LoginStore";
+
+const NavbarUser = () => {
+  const [isLoggedIn, setIsLoggedIn] = useState(
+    () => LoginStore.getState().userData !== null
+  );
+
+  useEffect(() => {
+    const unsubscribe = LoginStore.subscribe((state) =>
+      setIsLoggedIn(state.userData !== null)
+    );
+    return () => unsubscribe();
+  }, []);
+
+  const handleLogout = async () => {
+    await LoginStore.getState().logout();
+    setIsLoggedIn(false);
+  };
+
+  const loggedInLinks = [
+    { label: "Find spaces", href: "/spaces" },
+    { label: "Booking History", href: "/booking-history" },
+    { label: "Rent out my space", href: "/add" },
+    { label: "My Spaces", href: "/myspaces" },
+    { label: "Profile", href: "/profile" },
+    { label: "Contact Us", href: "/contact-us" },
+  ];
+
+  const loggedOutLinks = [
+    { label: "Find spaces", href: "/spaces" },
+    { label: "Contact Us", href: "/contact-us" },
+    { label: "Login", href: "/" },
+  ];
+
+  return (
+    <NavbarBase
+      title="Find your space"
+      links={isLoggedIn ? loggedInLinks : loggedOutLinks}
+      onLogout={isLoggedIn ? handleLogout : null}
+    />
+  );
+};
+
+export default NavbarUser;
Index: src/pages/list/List.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Pagination,\r\n} from \"@mui/material\";\r\nimport SearchBar from \"./Search\";\r\nimport SearchItem from \"../../components/searchItem/SearchItem\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport OfficeStore from \"../../api/OfficeStore\";\r\nimport MarketingComponent from \"../../components/marketingComponent/MarketingComponent\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst List = () => {\r\n  const itemsPerPage = 9;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [officeSpaces, setOfficeSpaces] = useState(\r\n    OfficeStore.getState().offices\r\n  );\r\n  const [filteredOfficeSpaces, setFilteredOfficeSpaces] = useState(\r\n    OfficeStore.getState().offices\r\n  );\r\n  const [sortOption, setSortOption] = useState(\"default\");\r\n  const listRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    OfficeStore.getState()\r\n      .fetchOffices(1000, 0)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const totalItems = response.length;\r\n        setTotalPages(Math.ceil(totalItems / itemsPerPage));\r\n        OfficeStore.getState().setOffices(response);\r\n        setOfficeSpaces(response);\r\n        setFilteredOfficeSpaces(response);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const handleOfficeUpdate = async () => {\r\n    try {\r\n      const response = await OfficeStore.getState().fetchOffices(1000, 0);\r\n      const data = await response.json();\r\n\r\n      OfficeStore.getState().setOffices(data);\r\n      setOfficeSpaces(data);\r\n      setFilteredOfficeSpaces(data);\r\n    } catch (error) {\r\n      console.error(\"Error updating offices:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    const slicedSpaces = officeSpaces.slice(start, end);\r\n    setFilteredOfficeSpaces(slicedSpaces);\r\n  }, [currentPage, officeSpaces]);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    let filteredSpaces = officeSpaces.filter((space) =>\r\n      space.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredOfficeSpaces(filteredSpaces);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    const selectedSortOption = event.target.value;\r\n    setSortOption(selectedSortOption);\r\n\r\n    let sortedSpaces;\r\n    switch (selectedSortOption) {\r\n      case \"alphabetical\":\r\n        sortedSpaces = [...filteredOfficeSpaces].sort((a, b) =>\r\n          a.location.localeCompare(b.location)\r\n        );\r\n        break;\r\n      case \"price\":\r\n        sortedSpaces = [...filteredOfficeSpaces].sort(\r\n          (a, b) => parseFloat(a.price) - parseFloat(b.price)\r\n        );\r\n        break;\r\n      default:\r\n        sortedSpaces = [...officeSpaces];\r\n        break;\r\n    }\r\n\r\n    setFilteredOfficeSpaces(sortedSpaces);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n    if (listRef.current) {\r\n      listRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"list-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <div style={{ height: \"1px\", backgroundColor: \"white\" }} />\r\n        <MarketingComponent />\r\n        <div\r\n          ref={listRef}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"80%\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: \"50px\",\r\n                gap: \"20px\",\r\n              }}\r\n            >\r\n              <SearchBar onSearch={handleSearch} />\r\n              <FormControl\r\n                style={{\r\n                  width: \"100%\",\r\n                  maxWidth: \"200px\",\r\n                }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"6px\", // Same border radius\r\n                    height: \"40px\", // Set consistent height\r\n                  },\r\n                }}\r\n              >\r\n                <InputLabel htmlFor=\"sort\">Sort by:</InputLabel>\r\n                <Select\r\n                  id=\"sort\"\r\n                  value={sortOption}\r\n                  onChange={handleSortChange}\r\n                  label=\"Sort by\"\r\n                >\r\n                  <MenuItem value=\"default\">Default</MenuItem>\r\n                  <MenuItem value=\"alphabetical\">Alphabetical</MenuItem>\r\n                  <MenuItem value=\"price\">Price</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                // width: \"100%\",\r\n                columnGap: \"40px\", // Add spacing between items\r\n                rowGap: \"40px\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {filteredOfficeSpaces.map((space) => (\r\n                <div key={space.id}>\r\n                  <SearchItem space={space} onUpdate={handleOfficeUpdate} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\",\r\n              padding: \"50px\",\r\n            }}\r\n          >\r\n            <Pagination\r\n              count={totalPages}\r\n              page={currentPage}\r\n              onChange={handlePageChange}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            />\r\n            Page {currentPage} of {totalPages}\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/list/List.jsx b/src/pages/list/List.jsx
--- a/src/pages/list/List.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/list/List.jsx	(date 1736720027822)
@@ -8,7 +8,7 @@
 } from "@mui/material";
 import SearchBar from "./Search";
 import SearchItem from "../../components/searchItem/SearchItem";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import OfficeStore from "../../api/OfficeStore";
 import MarketingComponent from "../../components/marketingComponent/MarketingComponent";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
@@ -114,7 +114,7 @@
   return (
     <div data-testid="list-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <div style={{ height: "1px", backgroundColor: "white" }} />
         <MarketingComponent />
         <div
Index: src/components/navbar/NavbarAdmin.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navbar/NavbarAdmin.jsx b/src/components/navbar/NavbarAdmin.jsx
new file mode 100644
--- /dev/null	(date 1736720415960)
+++ b/src/components/navbar/NavbarAdmin.jsx	(date 1736720415960)
@@ -0,0 +1,28 @@
+// NavbarAdmin.jsx
+import React, {useState} from "react";
+import NavbarBase from "./NavbarBase";
+import LoginStore from "../../api/LoginStore";
+
+const NavbarAdmin = () => {
+
+  const handleLogout = async () => {
+    await LoginStore.getState().logout();
+  };
+
+  const adminLinks = [
+    { label: "Platform Health", href: "/admin/platform-health" },
+    { label: "Admin Analytics", href: "/admin/stats" },
+    { label: "Policy Enforcement", href: "/admin/policy-enforcement" },
+    { label: "Review Spaces", href: "/admin/review-spaces" },
+  ];
+
+  return (
+    <NavbarBase
+      title="Find your space Admin"
+      links={adminLinks}
+      onLogout={handleLogout}
+    />
+  );
+};
+
+export default NavbarAdmin;
Index: src/pages/expandedSpacePage/ExpandedHistoryPage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport useBookingStore from \"../../api/BookingStore\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst ExpandedSpacePage = () => {\r\n  const [space, setSpace] = useState(null);\r\n  const { id } = useParams();\r\n  const bookingId = parseInt(id, 10); // Ensure id is a number\r\n  const [booking, setBooking] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const bookings = useBookingStore.getState().bookings;\r\n        console.log(\"Bookings\", bookings);\r\n        const booking = bookings.find((booking) => booking.id === bookingId);\r\n        console.log(\"Booking\", booking);\r\n        setBooking(booking);\r\n        console.log(\"Set booking as \", booking);\r\n        if (!booking) {\r\n          console.error(`No booking found with id: ${bookingId}`);\r\n          return;\r\n        }\r\n        const fetchedData = booking.adSpace;\r\n        console.log(\"Fetched ad space:\", fetchedData);\r\n        setSpace(fetchedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching expanded ad space:\", error);\r\n      }\r\n    };\r\n\r\n    console.log(\"Fetching expanded ad space with booking id:\", bookingId);\r\n    fetchData();\r\n  }, [bookingId]);\r\n\r\n  console.log(\"Here\", booking);\r\n  const bookingDate = new Date(booking.bookingDate);\r\n  const formattedBookingDate = bookingDate.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"expandedSpacePage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <CssBaseline />\r\n        <Grid\r\n          container\r\n          component=\"main\"\r\n          sx={{\r\n            height: \"90vh\", // Full viewport height\r\n            display: \"flex\", // Flex display for alignment\r\n            alignItems: \"center\", // Center vertically\r\n            justifyContent: \"center\", // Center horizontally\r\n            padding: \"10%\",\r\n          }}\r\n        >\r\n          {/* Image Section */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              src={space?.photos}\r\n              alt=\"Space\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                borderRadius: \"13px\",\r\n                objectFit: \"cover\",\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\", // Ensures text is left-aligned\r\n              justifyContent: \"center\", // Centers the text section vertically\r\n              padding: \"5%\",\r\n            }}\r\n          >\r\n            <Box sx={{ width: \"100%\" }}>\r\n              <Typography variant=\"h5\" gutterBottom sx={{ fontSize: \"40px\" }}>\r\n                {space?.location}\r\n              </Typography>\r\n              {/* New Booking Details Section */}\r\n              <Typography\r\n                marginTop=\"10px\"\r\n                variant=\"body1\"\r\n                gutterBottom\r\n                sx={{ fontSize: \"18px\" }}\r\n              >\r\n                <strong>Booking ID:</strong> {booking?.id}\r\n              </Typography>\r\n              <Typography\r\n                marginTop=\"10px\"\r\n                variant=\"body1\"\r\n                gutterBottom\r\n                sx={{ fontSize: \"18px\" }}\r\n              >\r\n                Booking Date: {formattedBookingDate}\r\n              </Typography>\r\n\r\n              <Typography\r\n                marginTop=\"10px\"\r\n                variant=\"body1\"\r\n                gutterBottom\r\n                sx={{ fontSize: \"18px\" }}\r\n              >\r\n                Fare per day: {`$${space?.price}/day`}\r\n              </Typography>\r\n              <Typography\r\n                marginTop=\"10px\"\r\n                variant=\"body1\"\r\n                gutterBottom\r\n                sx={{ fontSize: \"18px\" }}\r\n              >\r\n                Size: {`${space?.size} meter square`}\r\n              </Typography>\r\n\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"left\"\r\n                marginTop=\"10px\"\r\n              >\r\n                <Grid item>\r\n                  <Link to={`/reviews/${id}`}>\r\n                    <Button style={{ borderRadius: \"6px\" }} variant=\"contained\">\r\n                      Reviews\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ borderRadius: \"6px\" }}\r\n                    component={Link}\r\n                    to={`/contact/${id}`}\r\n                  >\r\n                    Contact Space Owner\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandedSpacePage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/expandedSpacePage/ExpandedHistoryPage.jsx b/src/pages/expandedSpacePage/ExpandedHistoryPage.jsx
--- a/src/pages/expandedSpacePage/ExpandedHistoryPage.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/expandedSpacePage/ExpandedHistoryPage.jsx	(date 1736720027756)
@@ -1,6 +1,6 @@
 import React, { useState, useEffect } from "react";
 import { Link, useParams } from "react-router-dom";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import Grid from "@mui/material/Grid";
 import CssBaseline from "@mui/material/CssBaseline";
 import Typography from "@mui/material/Typography";
@@ -63,7 +63,7 @@
   return (
     <div data-testid="expandedSpacePage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <CssBaseline />
         <Grid
           container
Index: src/pages/expandedSpacePage/ExpandedSpacePage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport ExpandedAdSpaceStore from \"../../api/ExpandedAdSpaceStore\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport Box from \"@mui/material/Box\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport axios from \"axios\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst ExpandedSpacePage = () => {\r\n  const [space, setSpace] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [startDateError, setStartDateError] = useState(\"\");\r\n  const [numberOfDays, setNumberOfDays] = useState(1);\r\n  const { id } = useParams();\r\n  console.log(\"The id is: \", id);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await ExpandedAdSpaceStore.getState().fetchExpandedAdSpace(id); // Fetch data and set it in the store\r\n        const fetchedData = ExpandedAdSpaceStore.getState().expandedAdSpace; // Access the updated state\r\n        console.log(\"Fetched ad space:\", fetchedData);\r\n        setSpace(fetchedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching expanded ad space:\", error);\r\n      }\r\n    };\r\n\r\n    console.log(\"Fetching expanded ad space with id:\", id);\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  // const handleStartDateChange = (newDate) => {\r\n  //   setStartDate(newDate);\r\n  // };\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    console.log(\"Start date value\", startDate);\r\n\r\n    // Validate start date\r\n    if (startDate == null) {\r\n      setStartDateError(\"Please select a start date.\");\r\n      isValid = false;\r\n    } else {\r\n      setStartDateError(\"\"); // Clear error if valid\r\n    }\r\n\r\n    console.log(\"Start Date Error\", startDateError);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleNumberOfDaysChange = (value) => {\r\n    setNumberOfDays(value);\r\n  };\r\n\r\n  const handleRentNowClick = async () => {\r\n    if (!validateForm()) {\r\n      return; // Stop if validation fails\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:4242/create-checkout-session\",\r\n        {\r\n          price: space.price,\r\n          imageUrl: space.photos,\r\n          quantity: numberOfDays,\r\n          name: space.location,\r\n          ad_space_id: id,\r\n          client_id: LoginStore.getState().userData.id,\r\n          start_date: startDate, // Include start date\r\n        }\r\n      );\r\n      const { checkoutUrl } = response.data;\r\n      window.location.href = checkoutUrl;\r\n    } catch (error) {\r\n      console.error(\"Error creating checkout session:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"expandedSpacePage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <CssBaseline />\r\n        <Grid\r\n          container\r\n          component=\"main\"\r\n          sx={{\r\n            height: \"90vh\", // Full viewport height\r\n            display: \"flex\", // Flex display for alignment\r\n            alignItems: \"center\", // Center vertically\r\n            justifyContent: \"center\", // Center horizontally\r\n            padding: \"10%\",\r\n          }}\r\n        >\r\n          {/* Image Section */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              src={space?.photos}\r\n              alt=\"Space\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                borderRadius: \"13px\",\r\n                objectFit: \"cover\",\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          {/* Text Section */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\", // Ensures text is left-aligned\r\n              justifyContent: \"center\", // Centers the text section vertically\r\n              padding: \"5%\",\r\n            }}\r\n          >\r\n            <Box sx={{ width: \"100%\" }}>\r\n              <Typography variant=\"h5\" gutterBottom sx={{ fontSize: \"40px\" }}>\r\n                {space?.location}\r\n              </Typography>\r\n              <Typography\r\n                marginTop=\"10px\"\r\n                variant=\"body1\"\r\n                gutterBottom\r\n                sx={{ fontSize: \"25px\" }}\r\n              >\r\n                {`$${space?.price}/day`}\r\n              </Typography>\r\n              <Typography\r\n                marginTop=\"10px\"\r\n                variant=\"body1\"\r\n                gutterBottom\r\n                sx={{ fontSize: \"18px\" }}\r\n              >\r\n                {space?.description}\r\n              </Typography>\r\n              {/* Add additional details like number of days counter and starting date selector */}\r\n              <LocalizationProvider marginTop=\"10px\" dateAdapter={AdapterDayjs}>\r\n                <DemoContainer components={[\"DatePicker\"]}>\r\n                  <DatePicker\r\n                    sx={{\r\n                      \"& .MuiOutlinedInput-root\": {\r\n                        borderRadius: \"6px\",\r\n                      },\r\n                    }}\r\n                    label=\"Starting Date\"\r\n                    value={startDate}\r\n                    onChange={(newValue) => {\r\n                      setStartDate(newValue);\r\n                      setStartDateError(\"\");\r\n                    }}\r\n                    slotProps={{\r\n                      textField: {\r\n                        error: !!startDateError,\r\n                        helperText: startDateError,\r\n                      },\r\n                    }}\r\n                  />\r\n                </DemoContainer>\r\n              </LocalizationProvider>\r\n\r\n              <Grid container alignItems=\"center\" spacing={2} marginTop=\"10px\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<RemoveIcon />}\r\n                    style={{ borderRadius: \"6px\" }}\r\n                    onClick={() => handleNumberOfDaysChange(numberOfDays - 1)}\r\n                    disabled={numberOfDays === 1}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>{numberOfDays}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    endIcon={<AddIcon />}\r\n                    style={{ borderRadius: \"6px\" }}\r\n                    onClick={() => handleNumberOfDaysChange(numberOfDays + 1)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                justifyContent=\"flex-start\" // Ensures buttons align to the left\r\n                marginTop=\"10px\"\r\n              >\r\n                <Grid item>\r\n                  <Link to={`/reviews/${id}`}>\r\n                    <Button style={{ borderRadius: \"6px\" }} variant=\"contained\">\r\n                      Reviews\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ borderRadius: \"6px\" }}\r\n                    onClick={handleRentNowClick}\r\n                  >\r\n                    Rent Now\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ borderRadius: \"6px\" }}\r\n                    component={Link}\r\n                    to={`/contact/${id}`}\r\n                  >\r\n                    Contact Space Owner\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandedSpacePage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/expandedSpacePage/ExpandedSpacePage.jsx b/src/pages/expandedSpacePage/ExpandedSpacePage.jsx
--- a/src/pages/expandedSpacePage/ExpandedSpacePage.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/expandedSpacePage/ExpandedSpacePage.jsx	(date 1736720027819)
@@ -1,6 +1,6 @@
 import React, { useState, useEffect } from "react";
 import { Link, useParams } from "react-router-dom";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import Grid from "@mui/material/Grid";
 import CssBaseline from "@mui/material/CssBaseline";
 import Typography from "@mui/material/Typography";
@@ -106,7 +106,7 @@
   return (
     <div data-testid="expandedSpacePage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <CssBaseline />
         <Grid
           container
Index: src/pages/mySpaces/MySpaces.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Pagination,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport SearchBar from \"./SearchMySpaces\";\r\nimport MySpaceItem from \"../../components/mySpaceItem/mySpaceItem\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport OfficeStore from \"../../api/OfficeStore\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\n\r\nconst MySpaces = () => {\r\n  const itemsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [officeSpaces, setOfficeSpaces] = useState([]);\r\n  const [filteredOfficeSpaces, setFilteredOfficeSpaces] = useState([]);\r\n  const [sortOption, setSortOption] = useState(\"default\");\r\n  const listRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const userData = LoginStore.getState().userData;\r\n\r\n    if (!userData) {\r\n      console.error(\"User is not logged in\");\r\n      return;\r\n    }\r\n\r\n    OfficeStore.getState()\r\n      .fetchOfficesByOwner(userData.id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const totalItems = response.length;\r\n        setTotalPages(Math.ceil(totalItems / itemsPerPage));\r\n        setOfficeSpaces(response);\r\n        setFilteredOfficeSpaces(response);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const handleOfficeUpdate = async () => {\r\n    try {\r\n      const response = await OfficeStore.getState().fetchOfficesByOwner(\r\n        LoginStore.getState().userData.id\r\n      );\r\n      const data = await response.json();\r\n      setOfficeSpaces(data);\r\n      setFilteredOfficeSpaces(data);\r\n    } catch (error) {\r\n      console.error(\"Error updating offices:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    const slicedSpaces = officeSpaces.slice(start, end);\r\n    setFilteredOfficeSpaces(slicedSpaces);\r\n  }, [currentPage, officeSpaces]);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    const filteredSpaces = officeSpaces.filter((space) =>\r\n      space.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredOfficeSpaces(filteredSpaces);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    const selectedSortOption = event.target.value;\r\n    setSortOption(selectedSortOption);\r\n\r\n    let sortedSpaces;\r\n    switch (selectedSortOption) {\r\n      case \"alphabetical\":\r\n        sortedSpaces = [...filteredOfficeSpaces].sort((a, b) =>\r\n          a.location.localeCompare(b.location)\r\n        );\r\n        break;\r\n      case \"price\":\r\n        sortedSpaces = [...filteredOfficeSpaces].sort(\r\n          (a, b) => parseFloat(a.price) - parseFloat(b.price)\r\n        );\r\n        break;\r\n      default:\r\n        sortedSpaces = [...officeSpaces];\r\n        break;\r\n    }\r\n\r\n    setFilteredOfficeSpaces(sortedSpaces);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n    if (listRef.current) {\r\n      listRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"mySpacesPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <Typography\r\n          variant=\"h5\"\r\n          gutterBottom\r\n          sx={{ fontSize: \"30px\", marginLeft: \"25px\", marginTop: \"30px\" }}\r\n        >\r\n          Your Rented Spaces\r\n        </Typography>\r\n        <Container ref={listRef}>\r\n          <div style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"50px\",\r\n            gap: \"20px\"\r\n          }}>\r\n            <SearchBar onSearch={handleSearch}/>\r\n            <FormControl\r\n                style={{\r\n                  width: \"100%\",\r\n                  maxWidth: \"200px\",\r\n                }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"6px\", // Same border radius\r\n                    height: \"40px\", // Set consistent height\r\n                  },\r\n                }}\r\n            >\r\n              <InputLabel htmlFor=\"sort\">Sort by:</InputLabel>\r\n              <Select\r\n                  id=\"sort\"\r\n                  value={sortOption}\r\n                  onChange={handleSortChange}\r\n                  label=\"Sort by\"\r\n              >\r\n                <MenuItem value=\"default\">Default</MenuItem>\r\n                <MenuItem value=\"alphabetical\">Alphabetical</MenuItem>\r\n                <MenuItem value=\"price\">Price</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"listContainerMySpace\">\r\n            <div className=\"listWrapperMySpace\">\r\n              <div className=\"listResultMySpace\">\r\n                {filteredOfficeSpaces.length > 0 ? (\r\n                    filteredOfficeSpaces.map((space) => (\r\n                        <MySpaceItem\r\n                            key={space.id}\r\n                            space={space}\r\n                            onUpdate={handleOfficeUpdate}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          padding: \"20px\",\r\n                          color: \"gray\",\r\n                        }}\r\n                    >\r\n                      No office spaces available.\r\n                    </div>\r\n                )}\r\n              </div>\r\n              <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"center\",\r\n                    paddingTop: \"20px\",\r\n                    marginBottom: \"30px\",\r\n                  }}\r\n              >\r\n              {filteredOfficeSpaces.length > 0 && (\r\n                  <>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      page={currentPage}\r\n                      onChange={handlePageChange}\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                    />\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                      Page {currentPage} of {totalPages}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySpaces;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/mySpaces/MySpaces.jsx b/src/pages/mySpaces/MySpaces.jsx
--- a/src/pages/mySpaces/MySpaces.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/mySpaces/MySpaces.jsx	(date 1736720027802)
@@ -10,7 +10,7 @@
 } from "@mui/material";
 import SearchBar from "./SearchMySpaces";
 import MySpaceItem from "../../components/mySpaceItem/mySpaceItem";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import OfficeStore from "../../api/OfficeStore";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
 import LoginStore from "../../api/LoginStore";
@@ -117,7 +117,7 @@
   return (
     <div data-testid="mySpacesPage-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <Typography
           variant="h5"
           gutterBottom
Index: src/pages/contactAdmin/ContactAdmin.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useRef, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Snackbar,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport emailjs from \"@emailjs/browser\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst ContactAdminForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n  const adminEmail = \"akhilajithuni@gmail.com\";\r\n  const [errors, setErrors] = useState({});\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useRef();\r\n\r\n  const validateField = (name, value) => {\r\n    let error = \"\";\r\n    switch (name) {\r\n      case \"fullName\":\r\n        if (!value.trim()) {\r\n          // Check for empty string or whitespace\r\n          error = \"Full Name is required.\";\r\n          console.log(\"Full name is empty\");\r\n        } else if (value.trim().length < 2) {\r\n          error = \"Full name is not valid.\";\r\n        } else if (!/^[a-zA-Z\\s]+$/.test(value)) {\r\n          error = \"Full Name can only contain letters and spaces.\";\r\n        }\r\n        break;\r\n      case \"email\":\r\n        if (!value.trim()) {\r\n          error = \"Email is required.\";\r\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n          error = \"Invalid email address.\";\r\n        }\r\n        break;\r\n      case \"subject\":\r\n        if (!value.trim()) {\r\n          error = \"Subject is required.\";\r\n        } else if (value.trim().length < 5) {\r\n          error = \"Subject must be at least 5 characters long.\";\r\n        }\r\n        break;\r\n      case \"message\":\r\n        if (!value.trim()) {\r\n          error = \"Message is required.\";\r\n        } else if (value.trim().length < 10) {\r\n          error = \"Message must be at least 10 characters long.\";\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true); // Set loading state\r\n\r\n    const newErrors = {};\r\n\r\n    Object.keys(formData).forEach((field) => {\r\n      const error = validateField(field, formData[field]);\r\n      if (error) {\r\n        newErrors[field] = error;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n\r\n    // If there are any errors, stop submission\r\n    if (Object.keys(newErrors).length > 0) {\r\n      console.log(\"Form validation failed:\", newErrors);\r\n      return;\r\n    }\r\n\r\n    // Proceed with sending the email\r\n    emailjs\r\n      .sendForm(\"service_ypanvv4\", \"template_7c06qpa\", form.current, {\r\n        publicKey: \"O_9E7yjTjSaZP0Fr9\",\r\n        adminEmail_email: adminEmail,\r\n      })\r\n      .then(\r\n        () => {\r\n          setConfirmationOpen(true);\r\n          setIsLoading(false); // Remove loading state\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error.text);\r\n          setIsLoading(false); // Remove loading state even on failure\r\n        }\r\n      );\r\n\r\n    // Reset form\r\n    setFormData({\r\n      fullName: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  const handleConfirmationClose = () => {\r\n    console.log(\"Code comes inside handleConfirmationClose\");\r\n    console.log(\"ConfirmationOpen value:\", confirmationOpen);\r\n    setConfirmationOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"contactAdminForm-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            margin: \"auto\",\r\n            padding: 4,\r\n            borderRadius: \"9px\",\r\n            boxShadow: 2,\r\n            marginTop: 10,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" gutterBottom sx={{ textAlign: \"center\" }}>\r\n            Contact Admin\r\n          </Typography>\r\n          <form ref={form} onSubmit={sendEmail}>\r\n            <TextField\r\n              label=\"Full Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleInputChange}\r\n              error={!!errors.fullName}\r\n              helperText={errors.fullName}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Your Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              error={!!errors.email}\r\n              helperText={errors.email}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Admin Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"admin_email\"\r\n              value={adminEmail}\r\n              disabled\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Subject\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"subject\"\r\n              value={formData.subject}\r\n              onChange={handleInputChange}\r\n              error={!!errors.subject}\r\n              helperText={errors.subject}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Message\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={6}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleInputChange}\r\n              error={!!errors.message}\r\n              helperText={errors.message}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ color: \"#fff\", backgroundColor: \"#000\" }}\r\n                style={{ marginTop: 20, borderRadius: 7 }}\r\n                disabled={isLoading} // Disable button when loading\r\n              >\r\n                {isLoading ? \"Sending...\" : \"Send Message\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Box>\r\n        <Snackbar\r\n          open={confirmationOpen}\r\n          autoHideDuration={2500}\r\n          onClose={handleConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\", border: \"2px solid green\" }}\r\n          >\r\n            Your message has been sent to Admin!\r\n          </Alert>\r\n        </Snackbar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactAdminForm;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/contactAdmin/ContactAdmin.jsx b/src/pages/contactAdmin/ContactAdmin.jsx
--- a/src/pages/contactAdmin/ContactAdmin.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/contactAdmin/ContactAdmin.jsx	(date 1736720027807)
@@ -7,7 +7,7 @@
   Snackbar,
   Alert,
 } from "@mui/material";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import CssBaseline from "@mui/material/CssBaseline";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
 import emailjs from "@emailjs/browser";
@@ -144,7 +144,7 @@
     <div data-testid="contactAdminForm-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <CssBaseline />
-        <Navbar />
+        <NavbarUser />
         <Box
           sx={{
             width: "100%",
Index: src/pages/contactOwner/ContactOwner.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Snackbar,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport ExpandedAdSpaceStore from \"../../api/ExpandedAdSpaceStore\";\r\n\r\nconst defaultTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  },\r\n});\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const { id } = useParams();\r\n\r\n  const [spaceOwnerEmail, setSpaceOwnerEmail] = useState(\"\");\r\n\r\n  const form = useRef();\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await ExpandedAdSpaceStore.getState().fetchExpandedAdSpace(id);\r\n        const fetchedData = ExpandedAdSpaceStore.getState().expandedAdSpace;\r\n        console.log(\"Fetched owner email\", fetchedData.owner_email);\r\n        if (fetchedData.owner_email) {\r\n          setSpaceOwnerEmail(fetchedData.owner_email);\r\n        } else {\r\n          setSpaceOwnerEmail(\"davidabraham@gmail.com\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching expanded ad space:\", error);\r\n      }\r\n    };\r\n\r\n    console.log(\"Fetching expanded ad space with id:\", id);\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const validateField = (name, value) => {\r\n    let error = \"\";\r\n    switch (name) {\r\n      case \"fullName\":\r\n        if (!value.trim()) {\r\n          // Check for empty string or whitespace\r\n          error = \"Full Name is required.\";\r\n          console.log(\"Full name is empty\");\r\n        } else if (value.trim().length < 2) {\r\n          error = \"Full name is not valid.\";\r\n        } else if (!/^[a-zA-Z\\s]+$/.test(value)) {\r\n          error = \"Full Name can only contain letters and spaces.\";\r\n        }\r\n        break;\r\n      case \"email\":\r\n        if (!value.trim()) {\r\n          error = \"Email is required.\";\r\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n          error = \"Invalid email address.\";\r\n        }\r\n        break;\r\n      case \"subject\":\r\n        if (!value.trim()) {\r\n          error = \"Subject is required.\";\r\n        } else if (value.trim().length < 5) {\r\n          error = \"Subject must be at least 5 characters long.\";\r\n        }\r\n        break;\r\n      case \"message\":\r\n        if (!value.trim()) {\r\n          error = \"Message is required.\";\r\n        } else if (value.trim().length < 10) {\r\n          error = \"Message must be at least 10 characters long.\";\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (error) {\r\n      setIsLoading(false);\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const newErrors = {};\r\n\r\n    Object.keys(formData).forEach((field) => {\r\n      const error = validateField(field, formData[field]);\r\n      if (error) {\r\n        newErrors[field] = error;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n\r\n    // If there are any errors, stop submission\r\n    if (Object.keys(newErrors).length > 0) {\r\n      console.log(\"Form validation failed:\", newErrors);\r\n      return;\r\n    }\r\n\r\n    // Proceed with sending the email\r\n    emailjs\r\n      .sendForm(\"service_ypanvv4\", \"template_a6s6y9o\", form.current, {\r\n        publicKey: \"O_9E7yjTjSaZP0Fr9\",\r\n        spaceOwnerEmail_email: spaceOwnerEmail,\r\n      })\r\n      .then(\r\n        () => {\r\n          setIsLoading(false); // Remove loading state\r\n          setConfirmationOpen(true);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error.text);\r\n          setIsLoading(false); // Remove loading state even on failure\r\n        }\r\n      );\r\n\r\n    // Reset form\r\n    setFormData({\r\n      fullName: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  const handleConfirmationClose = () => {\r\n    console.log(\"Code comes inside handleConfirmationClose\");\r\n    console.log(\"ConfirmationOpen value:\", confirmationOpen);\r\n    setConfirmationOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: validateField(name, value),\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"contactForm-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            margin: \"auto\",\r\n            padding: 4,\r\n            borderRadius: \"9px\",\r\n            boxShadow: 2,\r\n            marginTop: 10,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" gutterBottom sx={{ textAlign: \"center\" }}>\r\n            Contact Space\r\n          </Typography>\r\n          <form ref={form} onSubmit={sendEmail}>\r\n            <TextField\r\n              label=\"Full Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleInputChange}\r\n              error={!!errors.fullName}\r\n              helperText={errors.fullName}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Your Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              error={!!errors.email}\r\n              helperText={errors.email}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Space Owner Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"spaceOwner_email\"\r\n              value={spaceOwnerEmail}\r\n              disabled\r\n              required\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Subject\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"subject\"\r\n              value={formData.subject}\r\n              onChange={handleInputChange}\r\n              error={!!errors.subject}\r\n              helperText={errors.subject}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Message\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={6}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleInputChange}\r\n              error={!!errors.message}\r\n              helperText={errors.message}\r\n              size=\"large\"\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"9px\",\r\n                },\r\n              }}\r\n            />\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ color: \"#fff\", backgroundColor: \"#000\" }}\r\n                style={{ marginTop: 20, borderRadius: 7 }}\r\n                disabled={isLoading} // Disable button when loading\r\n              >\r\n                {isLoading ? \"Sending...\" : \"Send Message\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Box>\r\n\r\n        <Snackbar\r\n          open={confirmationOpen}\r\n          autoHideDuration={2000}\r\n          onClose={handleConfirmationClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            onClose={handleConfirmationClose}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\", border: \"2px solid green\" }}\r\n          >\r\n            Your message has been sent to the Space Owner!\r\n          </Alert>\r\n        </Snackbar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/contactOwner/ContactOwner.jsx b/src/pages/contactOwner/ContactOwner.jsx
--- a/src/pages/contactOwner/ContactOwner.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/contactOwner/ContactOwner.jsx	(date 1736720027776)
@@ -8,7 +8,7 @@
   Snackbar,
   Alert,
 } from "@mui/material";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import CssBaseline from "@mui/material/CssBaseline";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
 import emailjs from "@emailjs/browser";
@@ -178,7 +178,7 @@
     <div data-testid="contactForm-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
         <CssBaseline />
-        <Navbar />
+        <NavbarUser />
         <Box
           sx={{
             width: "100%",
Index: src/pages/reservations/reservations.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// ReservationsTable.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Table from '@mui/joy/Table';\r\nimport ReservationStore from \"../../api/ReservationStore\";\r\n\r\n\r\nconst ReservationsTable = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    // Fetch reservations data when the component mounts\r\n    ReservationStore.getState()\r\n      .fetchReservationsForOffice(20, 0, id) // Assuming `id` is available\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Reservations:\", data);\r\n        setReservations(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching reservations:\", error));\r\n  }, []);\r\n\r\n  const formatDate = (dateTimeString) => {\r\n    try {\r\n      // Extracting year, month, and day from the date-time string\r\n      const [datePart] = dateTimeString.split(\"T\");\r\n      return datePart;\r\n    } catch (error) {\r\n      console.error(`Error parsing date: ${error.message}`);\r\n      return \"Invalid Date\";\r\n    }\r\n  };\r\n\r\n  const extractTime = (dateTimeString) => {\r\n    try {\r\n      const [, timePart] = dateTimeString.split(\"T\");\r\n      const [hours, minutes] = timePart.split(\":\");\r\n      return `${hours}:${minutes}`;\r\n    } catch (error) {\r\n      console.error(`Error extracting time: ${error.message}`);\r\n      return \"Invalid Time\";\r\n    }\r\n  };\r\n\r\n  const onDelete = async (reservationId) => {\r\n    try {\r\n      setReservations((prevReservations) => {\r\n        // Filter out the deleted reservation\r\n        const updatedReservations = prevReservations.filter((reservation) => reservation.id !== reservationId);\r\n  \r\n        console.log(`Updated Reservations: ${JSON.stringify(updatedReservations)}`);\r\n  \r\n        return updatedReservations;\r\n      });\r\n  \r\n      await ReservationStore.getState().deleteReservation(reservationId);\r\n  \r\n      console.log(`Reservation deleted successfully: ${reservationId}`);\r\n    } catch (error) {\r\n      console.error('Error deleting reservation:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Typography sx={{marginTop: \"2%\", marginLeft: \"2.5%\"}}>\r\n            <h2>Reservations for Office Space</h2>\r\n      </Typography>\r\n      <Box sx={{marginTop: \"5%\",marginLeft:\"2.5%\", width: \"95%\"}}>\r\n      <Table hoverRow size=\"lg\" variant =\"plain\" >\r\n          <thead>\r\n            <tr>\r\n              <th>User ID</th>\r\n              <th>Start Date</th>\r\n              <th>Start Time</th>\r\n              <th>End Date</th>\r\n              <th>End Time</th>\r\n              <th>Actions</th>\r\n\r\n              {/* Add more table headers if needed */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {reservations.map((reservation) => (\r\n              <tr key={reservation.id}>\r\n                <td>{reservation.userId}</td>\r\n                <td>{formatDate(reservation.startDateTime)}</td>\r\n                <td>{extractTime(reservation.startDateTime)}</td>\r\n                <td>{formatDate(reservation.endDateTime)}</td>\r\n                <td>{extractTime(reservation.endDateTime)}</td>\r\n                <td>\r\n                    <Button variant=\"outlined\" color=\"error\" onClick = {() => onDelete(reservation.id)}>\r\n                        Delete\r\n                    </Button>\r\n                </td>\r\n                {/* Add more table cells if needed */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ReservationsTable;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/reservations/reservations.js b/src/pages/reservations/reservations.js
--- a/src/pages/reservations/reservations.js	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/reservations/reservations.js	(date 1736720027811)
@@ -1,6 +1,6 @@
 // ReservationsTable.js
 import React, { useState, useEffect } from "react";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import { useParams } from 'react-router-dom';
 import {
   Typography,
@@ -70,7 +70,7 @@
 
   return (
     <div>
-      <Navbar />
+      <NavbarUser />
       <Typography sx={{marginTop: "2%", marginLeft: "2.5%"}}>
             <h2>Reservations for Office Space</h2>
       </Typography>
Index: src/pages/approveSpaces/ApproveSpaces.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Pagination,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport SearchBar from \"./SearchApproveSpaces\";\r\nimport ApproveSpaceStore from \"../../api/ApproveSpaceStore\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport NavbarAdmin from \"../../components/navbarAdmin/NavbarAdmin\";\r\n\r\nconst ApproveSpacesPage = () => {\r\n  const itemsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [approvedSpaces, setApprovedSpaces] = useState([]);\r\n  const [filteredSpaces, setFilteredSpaces] = useState([]);\r\n  const [sortOption, setSortOption] = useState(\"default\");\r\n\r\n  useEffect(() => {\r\n    ApproveSpaceStore.getState()\r\n      .fetchNonApprovedSpaces(1000, 0)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Spaces:\", data);\r\n        setTotalPages(Math.ceil(data.length / itemsPerPage));\r\n        setApprovedSpaces(data);\r\n        setFilteredSpaces(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching spaces:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    const slicedSpaces = approvedSpaces.slice(start, end);\r\n    setFilteredSpaces(slicedSpaces);\r\n  }, [currentPage, approvedSpaces]);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    const filtered = approvedSpaces.filter((space) =>\r\n      space.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredSpaces(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    const selectedSortOption = event.target.value;\r\n    setSortOption(selectedSortOption);\r\n\r\n    let sortedSpaces;\r\n    switch (selectedSortOption) {\r\n      case \"alphabetical\":\r\n        sortedSpaces = [...filteredSpaces].sort((a, b) =>\r\n          a.location.localeCompare(b.location)\r\n        );\r\n        break;\r\n\r\n      case \"price\":\r\n        sortedSpaces = [...filteredSpaces].sort((a, b) =>\r\n          a.price.localeCompare(b.price)\r\n        );\r\n        break;\r\n\r\n      // Add more sorting options if needed\r\n      default:\r\n        sortedSpaces = [...approvedSpaces];\r\n        break;\r\n    }\r\n\r\n    setFilteredSpaces(sortedSpaces);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const handleApprove = (id) => {\r\n    fetch(`http://localhost:8000/api/adspace/${id}/update/`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ isApproved: true }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        setApprovedSpaces((prevSpaces) =>\r\n          prevSpaces.filter((space) => space.id !== id)\r\n        );\r\n        setFilteredSpaces((prevSpaces) =>\r\n          prevSpaces.filter((space) => space.id !== id)\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error approving space:\", error));\r\n  };\r\n\r\n  const handleDisapprove = (id) => {\r\n    fetch(`http://localhost:8000/api/adspace/${id}/delete/`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        setApprovedSpaces((prevSpaces) =>\r\n          prevSpaces.filter((space) => space.id !== id)\r\n        );\r\n        setFilteredSpaces((prevSpaces) =>\r\n          prevSpaces.filter((space) => space.id !== id)\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error deleting space:\", error));\r\n  };\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"ApproveSpacesPage-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <NavbarAdmin />\r\n        <Typography\r\n          variant=\"h5\"\r\n          gutterBottom\r\n          sx={{ fontSize: \"30px\", marginLeft: \"25px\", marginTop: \"30px\" }}\r\n        >\r\n          Reviewing and Approving Spaces\r\n        </Typography>\r\n        <Container>\r\n          <div style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"50px\",\r\n            gap: \"20px\"\r\n          }}>\r\n            <SearchBar onSearch={handleSearch}/>\r\n            <FormControl\r\n                style={{\r\n                  width: \"100%\",\r\n                  maxWidth: \"200px\",\r\n                }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: \"6px\", // Same border radius\r\n                    height: \"40px\", // Set consistent height\r\n                  },\r\n                }}\r\n            >\r\n              <InputLabel htmlFor=\"sort\">Sort by:</InputLabel>\r\n              <Select\r\n                  id=\"sort\"\r\n                  value={sortOption}\r\n                  onChange={handleSortChange}\r\n                  label=\"Sort by\"\r\n              >\r\n                <MenuItem value=\"default\">Default</MenuItem>\r\n                <MenuItem value=\"alphabetical\">Alphabetical</MenuItem>\r\n                <MenuItem value=\"price\">Price</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Paper elevation={4}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead align=\"center\">\r\n                  <TableRow>\r\n                    <TableCell align=\"center\">Space ID</TableCell>\r\n                    <TableCell align=\"center\">Location</TableCell>\r\n                    <TableCell align=\"center\">Size</TableCell>\r\n                    <TableCell align=\"center\">Price</TableCell>\r\n                    <TableCell align=\"center\">Owner Id</TableCell>\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody align=\"center\">\r\n                  {filteredSpaces.map((space) => (\r\n                      <TableRow key={space.id}>\r\n                        <TableCell align=\"center\">{space.id}</TableCell>\r\n                        <TableCell align=\"center\">{space.location}</TableCell>\r\n                        <TableCell align=\"center\">{space.size}</TableCell>\r\n                        <TableCell align=\"center\">{space.price}</TableCell>\r\n                        <TableCell align=\"center\">{space.owner_id}</TableCell>\r\n                        <TableCell align=\"center\" sx={{width: \"25%\"}}>\r\n                          <Stack\r\n                              align=\"center\"\r\n                              direction=\"row\"\r\n                              spacing={2}\r\n                              sx={{justifyContent: \"center\"}} // Add this line\r\n                          >\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"success\"\r\n                                onClick={() => handleApprove(space.id)}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"error\"\r\n                                onClick={() => handleDisapprove(space.id)}\r\n                            >\r\n                              Disapprove\r\n                            </Button>\r\n                          </Stack>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n\r\n          <Pagination\r\n              sx={{marginLeft: \"88%\", marginTop: \"50px\"}}\r\n              count={totalPages}\r\n              page={currentPage}\r\n              onChange={handlePageChange}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n          />\r\n          <Typography\r\n              variant=\"body2\"\r\n              sx={{marginLeft: \"91%\", marginTop: \"10px\"}}\r\n          >{`Page ${currentPage} of ${totalPages}`}</Typography>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApproveSpacesPage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/approveSpaces/ApproveSpaces.jsx b/src/pages/approveSpaces/ApproveSpaces.jsx
--- a/src/pages/approveSpaces/ApproveSpaces.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/approveSpaces/ApproveSpaces.jsx	(date 1736715331919)
@@ -20,7 +20,7 @@
 import TableContainer from "@mui/material/TableContainer";
 import TableHead from "@mui/material/TableHead";
 import TableRow from "@mui/material/TableRow";
-import NavbarAdmin from "../../components/navbarAdmin/NavbarAdmin";
+import NavbarAdmin from "../../components/navbar/NavbarAdmin";
 
 const ApproveSpacesPage = () => {
   const itemsPerPage = 10;
Index: src/__tests__/Navbar.test.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { render, screen } from '@testing-library/react';\r\nimport { MemoryRouter } from 'react-router-dom';\r\nimport Navbar from '../components/navbar/Navbar';\r\n\r\ntest('renders navbar', () => {\r\n    render(\r\n      <MemoryRouter>\r\n        <Navbar/>\r\n      </MemoryRouter>\r\n    );\r\n    const navBar = screen.getByTestId('navbar-1');\r\n    expect(navBar).toBeInTheDocument();\r\n  });
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/__tests__/Navbar.test.jsx b/src/__tests__/Navbar.test.jsx
--- a/src/__tests__/Navbar.test.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/__tests__/Navbar.test.jsx	(date 1736720027789)
@@ -1,11 +1,11 @@
 import { render, screen } from '@testing-library/react';
 import { MemoryRouter } from 'react-router-dom';
-import Navbar from '../components/navbar/Navbar';
+import NavbarUser from '../components/navbar/NavbarUser';
 
 test('renders navbar', () => {
     render(
       <MemoryRouter>
-        <Navbar/>
+        <NavbarUser/>
       </MemoryRouter>
     );
     const navBar = screen.getByTestId('navbar-1');
Index: src/pages/bookingHistory/BookingHistory.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// BookingHistory.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Pagination,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport SearchBar from \"./SearchBookingHistory\";\r\nimport SearchItem from \"../../components/searchItemBookingHistory/SearchItemBookingHistory\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport useBookingStore from \"../../api/BookingStore\";\r\nimport LoginStore from \"../../api/LoginStore\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst BookingHistory = () => {\r\n  const itemsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [filteredBookings, setFilteredBookings] = useState([]);\r\n  const [sortOption, setSortOption] = useState(\"default\");\r\n  const listRef = React.createRef();\r\n\r\n  const { bookings, fetchBookingsByClient } = useBookingStore();\r\n  const { userData } = LoginStore.getState();\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      try {\r\n        const clientId = userData.id;\r\n        await fetchBookingsByClient(clientId);\r\n      } catch (error) {\r\n        console.error(\"Error fetching booking data:\", error);\r\n      }\r\n    };\r\n    fetchBookings();\r\n  }, [fetchBookingsByClient, userData]);\r\n\r\n  useEffect(() => {\r\n    if (!bookings) {\r\n      console.error(\"Bookings are null\");\r\n    } else {\r\n      setFilteredBookings(bookings);\r\n      setTotalPages(Math.ceil(bookings.length / itemsPerPage));\r\n    }\r\n  }, [bookings]);\r\n\r\n  useEffect(() => {\r\n    if (!bookings) {\r\n      console.error(\"Bookings is null\");\r\n    } else {\r\n      const start = (currentPage - 1) * itemsPerPage;\r\n      const end = start + itemsPerPage;\r\n      setFilteredBookings(bookings.slice(start, end));\r\n    }\r\n  }, [currentPage, bookings]);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    if (!searchTerm.trim()) {\r\n      setFilteredBookings(bookings);\r\n    } else {\r\n      const filtered = bookings.filter((booking) =>\r\n        booking.adSpace.location\r\n          .toLowerCase()\r\n          .includes(searchTerm.toLowerCase())\r\n      );\r\n      setFilteredBookings(filtered);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    const selectedSortOption = event.target.value;\r\n    setSortOption(selectedSortOption);\r\n\r\n    let sortedBookings;\r\n    switch (selectedSortOption) {\r\n      case \"alphabetical\":\r\n        sortedBookings = [...filteredBookings].sort((a, b) =>\r\n          a.location.localeCompare(b.location)\r\n        );\r\n        break;\r\n      case \"price\":\r\n        sortedBookings = [...filteredBookings].sort(\r\n          (a, b) => parseFloat(a.price) - parseFloat(b.price)\r\n        );\r\n        break;\r\n      default:\r\n        sortedBookings = [...bookings];\r\n        break;\r\n    }\r\n\r\n    setFilteredBookings(sortedBookings);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n    if (listRef.current) {\r\n      listRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const defaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000000\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily:\r\n        \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"bookingHistory-1\" style={{ paddingTop: \"64px\" }}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Navbar />\r\n        <Typography\r\n          variant=\"h5\"\r\n          gutterBottom\r\n          sx={{ fontSize: \"30px\", marginLeft: \"25px\", marginTop: \"30px\" }}\r\n        >\r\n          Your Booking History\r\n        </Typography>\r\n        <Container ref={listRef}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              margin: \"50px\",\r\n              gap: \"20px\",\r\n            }}\r\n          >\r\n            <SearchBar onSearchHistory={handleSearch} />\r\n            <FormControl\r\n              style={{\r\n                width: \"100%\",\r\n                maxWidth: \"200px\",\r\n              }}\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"6px\", // Same border radius\r\n                  height: \"40px\", // Set consistent height\r\n                },\r\n              }}\r\n            >\r\n              <InputLabel htmlFor=\"sort\">Sort by:</InputLabel>\r\n              <Select\r\n                id=\"sort\"\r\n                value={sortOption}\r\n                onChange={handleSortChange}\r\n                label=\"Sort by\"\r\n              >\r\n                <MenuItem value=\"default\">Default</MenuItem>\r\n                <MenuItem value=\"alphabetical\">Alphabetical</MenuItem>\r\n                <MenuItem value=\"price\">Price</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"listContainer\">\r\n            <div className=\"listWrapper\">\r\n              <div className=\"listResult\">\r\n                {filteredBookings.length > 0 ? (\r\n                  filteredBookings.map((booking) => (\r\n                    <SearchItem key={booking.id} booking={booking} />\r\n                  ))\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      padding: \"20px\",\r\n                      color: \"gray\",\r\n                    }}\r\n                  >\r\n                    No bookings found.\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  alignItems: \"center\",\r\n                  paddingTop: \"20px\",\r\n                  marginBottom: \"30px\",\r\n                }}\r\n              >\r\n                {filteredBookings.length > 0 && (\r\n                  <>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      page={currentPage}\r\n                      onChange={handlePageChange}\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                    />\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                      Page {currentPage} of {totalPages}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingHistory;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/bookingHistory/BookingHistory.jsx b/src/pages/bookingHistory/BookingHistory.jsx
--- a/src/pages/bookingHistory/BookingHistory.jsx	(revision 52e257c3a7dddba8362e716bb2a8a042de0f288d)
+++ b/src/pages/bookingHistory/BookingHistory.jsx	(date 1736720027815)
@@ -11,7 +11,7 @@
 } from "@mui/material";
 import SearchBar from "./SearchBookingHistory";
 import SearchItem from "../../components/searchItemBookingHistory/SearchItemBookingHistory";
-import Navbar from "../../components/navbar/Navbar";
+import NavbarUser from "../../components/navbar/NavbarUser";
 import useBookingStore from "../../api/BookingStore";
 import LoginStore from "../../api/LoginStore";
 import { createTheme, ThemeProvider } from "@mui/material/styles";
@@ -117,7 +117,7 @@
   return (
     <div data-testid="bookingHistory-1" style={{ paddingTop: "64px" }}>
       <ThemeProvider theme={defaultTheme}>
-        <Navbar />
+        <NavbarUser />
         <Typography
           variant="h5"
           gutterBottom
